<Activity mc:Ignorable="sap sap2010" x:Class="MainSequence" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/python" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sds="clr-namespace:System.Data.SQLite;assembly=System.Data.SQLite" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:uwaj="clr-namespace:UiPath.Web.Activities.JSON;assembly=UiPath.Web.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel.Composition.Registration</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Data.SQLite</x:String>
      <x:String>System.Data.Common</x:String>
      <x:String>Witrics.SQLite</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>UiPath.Python.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Web.Activities.JSON.Models</x:String>
      <x:String>UiPath.Web.Activities.JSON</x:String>
      <x:String>UiPath.Sdk.Activities</x:String>
      <x:String>UiPath.Sdk.Activities.DependencyInjection</x:String>
      <x:String>UiPath.Sdk.Activities.DependencyInjection.Contracts</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition.Registration</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Data.SQLite</AssemblyReference>
      <AssemblyReference>Witrics.SQLite.Shared</AssemblyReference>
      <AssemblyReference>Witrics.SQLite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MainSequence" sap:VirtualizedContainerService.HintSize="1114.888888888889,1511.5555555555557" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Object" Name="pyResultDict" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyResultObject" />
      <Variable x:TypeArguments="x:String" Name="paramsJson" />
      <Variable x:TypeArguments="s:Object[]" Name="paramsList" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyScriptObject" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSetFileJobs" />
      <Variable x:TypeArguments="njl:JObject" Name="actualDataObj" />
      <Variable x:TypeArguments="x:String" Name="ea" />
      <Variable x:TypeArguments="x:String" Name="timeframe" />
      <Variable x:TypeArguments="x:String" Name="symbol" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonObj" />
      <Variable x:TypeArguments="x:String" Name="jsonString" />
      <Variable x:TypeArguments="x:String" Name="displayText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="resultDict" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyResult" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyObject" />
      <Variable x:TypeArguments="sds:SQLiteConnection" Name="dbConnection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSettings" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtEAMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="eaMapDict" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="settingsDict" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSymbol" />
      <Variable x:TypeArguments="sd:DataTable" Name="queryResult" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="sqlDBconnection" />
      <Variable x:TypeArguments="x:String" Name="setFileID" />
      <Variable x:TypeArguments="x:String" Name="setFileStepsID" />
      <Variable x:TypeArguments="x:String" Name="aiSetFilePath" />
      <Variable x:TypeArguments="x:String" Name="best_pass_number" />
      <Variable x:TypeArguments="x:String" Name="bestPassSetFilePath" />
      <Variable x:TypeArguments="x:String" Name="bestPassBacktestReportPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap:VirtualizedContainerService.HintSize="586.6666666666666,1488.4444444444443" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReadConfigSequence - Invoke Workflow File (ReadConfigSequence.xaml)" sap:VirtualizedContainerService.HintSize="552.8888888888889,176.44444444444446" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ReadConfigSequence.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtSymbol">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">dtSymbol</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtEAMap">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">dtEAMap</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtSettings">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">dtSettings</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="ConfigPath">.\data\config.xlsx</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552.8888888888889,56.888888888888886" sap2010:WorkflowViewState.IdRef="CommentOut_13">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_9">
              <ui:MessageBox.Text>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">settingsDict["BacktestReportPath"]</CSharpValue>
                </InArgument>
              </ui:MessageBox.Text>
            </ui:MessageBox>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552.8888888888889,56.888888888888886" sap2010:WorkflowViewState.IdRef="CommentOut_5">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_2">
              <ui:MessageBox.Text>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">string.Join(Environment.NewLine, dtSymbol.AsEnumerable().Select(row =&gt; row.Field&lt;string&gt;("Symbol")))</CSharpValue>
                </InArgument>
              </ui:MessageBox.Text>
            </ui:MessageBox>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552.8888888888889,56.888888888888886" sap2010:WorkflowViewState.IdRef="CommentOut_11">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,143" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:DatabaseConnect DisplayName="Connect to Database" sap:VirtualizedContainerService.HintSize="416,83" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="Driver={SQLite3 ODBC Driver};Database=C:\Users\Philip\Documents\UiPath\MT4 Backtesting Automation\EA_Automation.db;">
              <ui:DatabaseConnect.DatabaseConnection>
                <OutArgument x:TypeArguments="ui:DatabaseConnection">
                  <CSharpReference x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">sqlDBconnection</CSharpReference>
                </OutArgument>
              </ui:DatabaseConnect.DatabaseConnection>
            </ui:DatabaseConnect>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552.8888888888889,56.888888888888886" sap2010:WorkflowViewState.IdRef="CommentOut_12">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,198" sap2010:WorkflowViewState.IdRef="Sequence_16">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Run Query" sap:VirtualizedContainerService.HintSize="416,138" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="Select 1;">
              <ui:ExecuteQuery.DataTable>
                <OutArgument x:TypeArguments="sd:DataTable">
                  <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">queryResult</CSharpReference>
                </OutArgument>
              </ui:ExecuteQuery.DataTable>
              <ui:ExecuteQuery.ExistingDbConnection>
                <InArgument x:TypeArguments="ui:DatabaseConnection">
                  <CSharpValue x:TypeArguments="ui:DatabaseConnection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">sqlDBconnection</CSharpValue>
                </InArgument>
              </ui:ExecuteQuery.ExistingDbConnection>
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
            </ui:ExecuteQuery>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="552.8888888888889,56.888888888888886" sap2010:WorkflowViewState.IdRef="CommentOut_6">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_4">
              <ui:MessageBox.Text>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">queryResult.Rows[0][0]</CSharpValue>
                </InArgument>
              </ui:MessageBox.Text>
            </ui:MessageBox>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.set" Folder="C:\Users\Philip\Documents\GitHub\EA_Automation\01_user_inputs" sap:VirtualizedContainerService.HintSize="552.8888888888889,944.4444444444445" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="True">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="519.1111111111111,655.5555555555555" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="485.3333333333333,281.77777777777777" sap2010:WorkflowViewState.IdRef="CommentOut_29">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,171.11111111111111" sap2010:WorkflowViewState.IdRef="Sequence_62">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="C:\Program Files (x86)\eareview.net\Tick Data Suite\Tick Data Manager.exe" sap:VirtualizedContainerService.HintSize="416,111.11111111111111" sap2010:WorkflowViewState.IdRef="StartProcess_3" />
                  </Sequence>
                </ui:CommentOut.Body>
              </ui:CommentOut>
              <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="C:\Program Files (x86)\Vantage International MT4\terminal.exe" sap:VirtualizedContainerService.HintSize="485.3333333333333,120" sap2010:WorkflowViewState.IdRef="StartProcess_2" />
              <uix:NCheckState DisplayName="Check App State 'Navigator'" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="485.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="NCheckState_2" Version="V5">
                <uix:NCheckState.IfExists>
                  <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="450,92" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </uix:NCheckState.IfExists>
                <uix:NCheckState.IfNotExists>
                  <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="526,438" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="492,376" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="5">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="450,174" sap2010:WorkflowViewState.IdRef="Sequence_39">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Delay Duration="00:00:30" sap:VirtualizedContainerService.HintSize="416,114" sap2010:WorkflowViewState.IdRef="Delay_1" />
                          </Sequence>
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                  </Sequence>
                </uix:NCheckState.IfNotExists>
                <uix:NCheckState.Target>
                  <uix:TargetAnchorable ContentHash="cjBCeNqZOE6_7tJQTdhESA" DesignTimeRectangle="11, 473, 276, 321" FullSelectorArgument="&lt;wnd cls='Afx:*' title='Navigator' /&gt;&lt;ctrl name='Navigator' role='client' /&gt;" Guid="76f776f0-f813-4952-a93f-0044b65eb144" InformativeScreenshot="7ebd6f8b7260cada5d39c6ad6dbcfd1e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/kB1PgRstqk68u8jzZALSIA" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' title='892422018: VantageInternational-Demo - Demo Account - Vantage In*' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="Interactive" />
                </uix:NCheckState.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </uix:NCheckState>
              <Sequence DisplayName="Prepare Setting Dict Sequence" sap:VirtualizedContainerService.HintSize="485.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_29">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="470,117" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                      <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">settingsDict</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81" xml:space="preserve">dtSettings.AsEnumerable()
    .Where(r =&gt; !string.IsNullOrWhiteSpace(r["Name"].ToString()))
    .ToDictionary(
        r =&gt; r["Name"].ToString().Trim(),
        r =&gt; r["Value"].ToString().Trim()
    )</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap:VirtualizedContainerService.HintSize="470,503" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">!string.IsNullOrWhiteSpace(settingsDict["BacktestPeriodinYear"])</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,282" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">settingsDict["DateTo"]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">DateTime.Now.ToString("dd.yyyy.MM")</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="434,106.5" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">settingsDict["DateFrom"]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">DateTime.Now.AddYears(-int.Parse(settingsDict["BacktestPeriodinYear"])).ToString("dd.yyyy.MM")</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90.5" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <p:PythonScope OperationTimeout="{x:Null}" DisplayName="Python Scope" sap:VirtualizedContainerService.HintSize="591.5555555555555,6526.222222222223" sap2010:WorkflowViewState.IdRef="PythonScope_1" LibraryPath="C:\Users\Philip\AppData\Local\Programs\Python\Python311\python311.dll" Path="C:\Users\Philip\AppData\Local\Programs\Python\Python311\" WorkingFolder="C:\Users\Philip\Documents\GitHub\mt4_optimizer\">
                <p:PythonScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="PythonEngineSessionProperty" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="589.7777777777778,6323.111111111111" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="messageString" />
                        <Variable x:TypeArguments="x:String" Name="EAFile" />
                        <Variable x:TypeArguments="s:Object[]" Name="logList" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Extract Set File Info" sap:VirtualizedContainerService.HintSize="556,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="506,227" sap2010:WorkflowViewState.IdRef="LoadScript_1" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\extract_setfilename_fields.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">pyObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="506,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" Name="extract_fields_from_csv">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">pyObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">new List&lt;Object&gt; {CurrentFile.ToString(), "C:\\Users\\Philip\\Documents\\GitHub\\mt4_optimizer\\SymbolList.csv"}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="506,123" sap2010:WorkflowViewState.IdRef="GetObject`1_1">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="506,175" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">jsonString</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="506,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="506,115" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">ea</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">jsonObj["EA"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="506,628" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="504,446" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If sap:VirtualizedContainerService.HintSize="470,386" sap2010:WorkflowViewState.IdRef="If_3">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">CurrentRow["Code"].ToString().Trim().ToUpper() == ea.Trim().ToUpper()</CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,166" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_39">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">EAFile</CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">CurrentRow["EAFile"].ToString()</CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <ui:ForEachRow.DataTable>
                            <InArgument x:TypeArguments="sd:DataTable">
                              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">dtEAMap</CSharpValue>
                            </InArgument>
                          </ui:ForEachRow.DataTable>
                        </ui:ForEachRow>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="506,277" sap2010:WorkflowViewState.IdRef="CommentOut_28">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="468,166" sap2010:WorkflowViewState.IdRef="Sequence_60">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">EAFile</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">dtEAMap.AsEnumerable().Where(row =&gt; row["Code"].ToString().Trim().ToUpper() == ea.Trim().ToUpper()).Select(row =&gt; row["EAFile"].ToString()).FirstOrDefault()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <Assign sap:VirtualizedContainerService.HintSize="506,115" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">symbol</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">jsonObj["Symbol"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="506,115" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">timeframe</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">jsonObj["Timeframe"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="506,271" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_5">
                                <ui:MessageBox.Text>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">symbol + timeframe + ea+EAFile</CSharpValue>
                                  </InArgument>
                                </ui:MessageBox.Text>
                              </ui:MessageBox>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <Sequence DisplayName="create set_file_jobs" sap:VirtualizedContainerService.HintSize="520,1460.4444444444443" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486.22222222222223,228" sap2010:WorkflowViewState.IdRef="LoadScript_2" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">pyScriptObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <Assign sap:VirtualizedContainerService.HintSize="486.22222222222223,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Object[]">
                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">paramsList</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Object[]">
                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212" xml:space="preserve">//new object[] { "Philip", CurrentFile.ToString(), symbol, timeframe, EAFile, "v1", 0, "pending", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") }
new object[] { 
    settingsDict["UserId"],                            // User ID, from config
    CurrentFile.ToString(),                            // File path
    symbol,                                            // Symbol (variable)
    timeframe,                                         // Timeframe (variable)
    EAFile,                                            // EA file (variable)
    settingsDict["SetVersion"],                        // Set version, from config (add if you want to control via config)
    0,                                                 // Current step (likely always 0 here)
    "pending",                                         // Status (parameterize if desired)
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),      // Created at
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")       // Updated at
}</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486.22222222222223,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_2">
                          <uwaj:SerializeJson.InputObject>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">paramsList</CSharpValue>
                            </InArgument>
                          </uwaj:SerializeJson.InputObject>
                          <uwaj:SerializeJson.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">paramsJson</CSharpReference>
                            </OutArgument>
                          </uwaj:SerializeJson.Result>
                        </uwaj:SerializeJson>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486.22222222222223,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" Name="run_sqlite_query">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">pyScriptObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50" xml:space="preserve">new string[] {"C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
	"INSERT INTO set_file_jobs (user_id, original_file, symbol, timeframe, ea, set_version, current_step, status, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 
	paramsJson}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486.22222222222223,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_2">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,176" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">jsonString</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115.5" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">setFileID</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">jsonObj["lastrowid"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271.5" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169.5" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.5" sap2010:WorkflowViewState.IdRef="MessageBox_6">
                                <ui:MessageBox.Text>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">setFileID</CSharpValue>
                                  </InArgument>
                                </ui:MessageBox.Text>
                              </ui:MessageBox>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <Sequence DisplayName="create set_file_steps" sap:VirtualizedContainerService.HintSize="556,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486,227" sap2010:WorkflowViewState.IdRef="LoadScript_4" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">pyScriptObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <Assign sap:VirtualizedContainerService.HintSize="486,116" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Object[]">
                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">paramsList</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Object[]">
                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116" xml:space="preserve">new object[] {
    setFileID,                                         // job_id
    0,                                                 // step_number
    "User Input",                                      // step_name
    CurrentFile.ToString(),                            // file_path
    "User initial input at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                            // version
    "{}",                                              // meta_json
    "initiated"                                        // status
}</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="SerializeJson_4">
                          <uwaj:SerializeJson.InputObject>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">paramsList</CSharpValue>
                            </InArgument>
                          </uwaj:SerializeJson.InputObject>
                          <uwaj:SerializeJson.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">paramsJson</CSharpReference>
                            </OutArgument>
                          </uwaj:SerializeJson.Result>
                        </uwaj:SerializeJson>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" Name="run_sqlite_query">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">pyScriptObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="GetObject`1_4">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,175" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">jsonString</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">setFileStepsID</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">jsonObj["lastrowid"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271" sap2010:WorkflowViewState.IdRef="CommentOut_16">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_8">
                                <ui:MessageBox.Text>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">setFileStepsID</CSharpValue>
                                  </InArgument>
                                </ui:MessageBox.Text>
                              </ui:MessageBox>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <Sequence DisplayName="create set_file_artifacts" sap:VirtualizedContainerService.HintSize="556,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486,227" sap2010:WorkflowViewState.IdRef="LoadScript_3" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">pyScriptObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Object[]">
                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">paramsList</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Object[]">
                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">new object[] { setFileStepsID, "set_file", CurrentFile.ToString(), "" }</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="SerializeJson_3">
                          <uwaj:SerializeJson.InputObject>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">paramsList</CSharpValue>
                            </InArgument>
                          </uwaj:SerializeJson.InputObject>
                          <uwaj:SerializeJson.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">paramsJson</CSharpReference>
                            </OutArgument>
                          </uwaj:SerializeJson.Result>
                        </uwaj:SerializeJson>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" Name="run_sqlite_query">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">pyScriptObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="GetObject`1_3">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,175" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">jsonString</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">setFileArtifactsID</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">jsonObj["lastrowid"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271" sap2010:WorkflowViewState.IdRef="CommentOut_17">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_7">
                                <ui:MessageBox.Text>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">setFileArtifactsID</CSharpValue>
                                  </InArgument>
                                </ui:MessageBox.Text>
                              </ui:MessageBox>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <Sequence DisplayName="Assign Backtest Variable" sap:VirtualizedContainerService.HintSize="556,314.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_44">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">settingsDict["SettingsFilePath"]</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">Path.Combine(settingsDict["SettingsFilePath"], Path.GetFileName(CurrentFile.ToString()))</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,106.5" sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">settingsDict["BacktestReportPath"]</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">Path.Combine(settingsDict["BacktestReportPath"], Path.GetFileNameWithoutExtension(CurrentFile.ToString()) + "-backtest_report.htm")</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="556,57" sap2010:WorkflowViewState.IdRef="CommentOut_21">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_10">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112" xml:space="preserve">$"BacktestReportPath: {settingsDict["BacktestReportPath"]}\n" +
    $"setFileStepsID: {setFileStepsID}\n" +
    $"MetricType: MT4 Backtest Report\n" +
    $"EA: {ea}\n" +
    $"CurrentFile: {CurrentFile}\n" +
    $"OutputFolder: {System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"].ToString())}\n" +
    $"DB Path: C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db\n" +
    $"Summary Metrics: summary_metrics.csv";</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                            </ui:MessageBox>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MT4backtest - Invoke Workflow File (MT4backtest.xaml)" sap:VirtualizedContainerService.HintSize="556,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="MT4backtest.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="CloseMT4">
                            <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">NAppCloseMode.Never</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="InitialDeposit">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">settingsDict["InitialDeposit"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="OptimizedParameter">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">settingsDict["OptimizedParameter"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="OptimizationReportPath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">settingsDict["OptimizationPath"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="BacktestReportPath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">settingsDict["BacktestReportPath"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="SettingsFilePath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">settingsDict["SettingsFilePath"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="DateTo">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">settingsDict["DateTo"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="DateFrom">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">settingsDict["DateFrom"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Spread">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">settingsDict["Spread"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Period">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">timeframe</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="btSymbol">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">symbol</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mode">Backtest</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TargetEA">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">EAFile</CSharpValue>
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence DisplayName="Extract MT4 Report to DB" sap:VirtualizedContainerService.HintSize="556,57" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="434,227" sap2010:WorkflowViewState.IdRef="LoadScript_5" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\extract_mt4_report.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">pyObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_9">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153" xml:space="preserve">"BacktestReportPath: " + settingsDict["BacktestReportPath"] + Environment.NewLine +
"setFileStepsID: " + setFileStepsID + Environment.NewLine +
"Type: MT4 Backtest Report" + Environment.NewLine +
"EA: " + ea + Environment.NewLine +
"CurrentFile: " + CurrentFile + Environment.NewLine +
"OutputFolder: " + System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"].ToString()) + Environment.NewLine +
"DB Path: C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db" + Environment.NewLine +
"Summary Metrics: _summary_metrics.csv" + Environment.NewLine +
"Config: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" + Environment.NewLine +
"Perf Criteria: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" Name="process_mt4_report">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">pyObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154" xml:space="preserve">//new List&lt;object&gt; { settingsDict["BacktestReportPath"], setFileStepsID,  "MT4 Backtest Report", ea,  CurrentFile.ToString(), System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", "_summary_metrics.csv" }
new List&lt;object&gt; {
    settingsDict["BacktestReportPath"],                                        // html_file
    setFileStepsID,                                                           // step_id
    "MT4 Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    CurrentFile.ToString(),                                                   // input_set_file
    System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="GetObject`1_5">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_8">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">aiSetFilePath</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">jsonObj["ai_set_file_path"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,166" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">aiSetFilePath</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                      </Sequence>
                      <Sequence DisplayName="Create Backtest Completed and Start Optimization Steps" sap:VirtualizedContainerService.HintSize="556,57" sap2010:WorkflowViewState.IdRef="Sequence_40">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486,227" sap2010:WorkflowViewState.IdRef="LoadScript_6" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">pyScriptObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <Assign sap:VirtualizedContainerService.HintSize="486,116" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Object[]">
                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">paramsList</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Object[]">
                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170" xml:space="preserve">new object[] {
    setFileID,                                  // job_id
    1,                                          // step_number
    "Backtest Completed and Start Optimization", // step_name
    aiSetFilePath,                     // file_path
    "New Optimization set file " + aiSetFilePath + " at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                     // version
    "",                                         // meta_json (e.g., "{}" or your JSON string)
    "Completed"                                 // status
}</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="SerializeJson_5">
                          <uwaj:SerializeJson.InputObject>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">paramsList</CSharpValue>
                            </InArgument>
                          </uwaj:SerializeJson.InputObject>
                          <uwaj:SerializeJson.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">paramsJson</CSharpReference>
                            </OutArgument>
                          </uwaj:SerializeJson.Result>
                        </uwaj:SerializeJson>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" Name="run_sqlite_query">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">pyScriptObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="GetObject`1_6">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,175" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">jsonString</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">setFileStepsID</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">jsonObj["lastrowid"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271" sap2010:WorkflowViewState.IdRef="CommentOut_22">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_11">
                                <ui:MessageBox.Text>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">setFileStepsID</CSharpValue>
                                  </InArgument>
                                </ui:MessageBox.Text>
                              </ui:MessageBox>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <Sequence DisplayName="create Optimzation set_file_artifacts" sap:VirtualizedContainerService.HintSize="556,57" sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486,227" sap2010:WorkflowViewState.IdRef="LoadScript_7" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">pyScriptObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Object[]">
                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">paramsList</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Object[]">
                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">new object[] { setFileStepsID, "Optimzation set_file", aiSetFilePath, "" }</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="SerializeJson_6">
                          <uwaj:SerializeJson.InputObject>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">paramsList</CSharpValue>
                            </InArgument>
                          </uwaj:SerializeJson.InputObject>
                          <uwaj:SerializeJson.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">paramsJson</CSharpReference>
                            </OutArgument>
                          </uwaj:SerializeJson.Result>
                        </uwaj:SerializeJson>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" Name="run_sqlite_query">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">pyScriptObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="GetObject`1_7">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,175" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">jsonString</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_9">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="486,115" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">setFileArtifactsID</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">jsonObj["lastrowid"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271" sap2010:WorkflowViewState.IdRef="CommentOut_23">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169" sap2010:WorkflowViewState.IdRef="Sequence_43">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109" sap2010:WorkflowViewState.IdRef="MessageBox_12">
                                <ui:MessageBox.Text>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">setFileArtifactsID</CSharpValue>
                                  </InArgument>
                                </ui:MessageBox.Text>
                              </ui:MessageBox>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </Sequence>
                      <Sequence DisplayName="Assign Optimzation Variable" sap:VirtualizedContainerService.HintSize="556,57" sap2010:WorkflowViewState.IdRef="Sequence_45">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">settingsDict["SettingsFilePath"]</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">aiSetFilePath</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">settingsDict["OptimizationPath"]</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">Path.Combine(settingsDict["OptimizationPath"], Path.GetFileNameWithoutExtension(aiSetFilePath) + "-OptimizationReport.htm")</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MT4backtest - Invoke Workflow File (MT4backtest.xaml)" sap:VirtualizedContainerService.HintSize="556,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="MT4backtest.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="CloseMT4">
                            <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">NAppCloseMode.Never</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="InitialDeposit">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">settingsDict["InitialDeposit"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="OptimizedParameter">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">settingsDict["OptimizedParameter"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="OptimizationReportPath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">settingsDict["OptimizationPath"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="BacktestReportPath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">settingsDict["BacktestReportPath"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="SettingsFilePath">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">settingsDict["SettingsFilePath"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="DateTo">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">settingsDict["DateTo"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="DateFrom">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">settingsDict["DateFrom"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Spread">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">settingsDict["Spread"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Period">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">timeframe</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="btSymbol">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">symbol</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="mode">Optimzation</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TargetEA">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">EAFile</CSharpValue>
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence DisplayName="Extract MT4 Optimization Report to DB" sap:VirtualizedContainerService.HintSize="556,1030.5" sap2010:WorkflowViewState.IdRef="Sequence_46">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="434,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_8" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\extract_mt4_optimization.py">
                          <p:LoadScript.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">pyObject</CSharpReference>
                            </OutArgument>
                          </p:LoadScript.Result>
                        </p:LoadScript>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,57" sap2010:WorkflowViewState.IdRef="CommentOut_24">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,227" sap2010:WorkflowViewState.IdRef="Sequence_47">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,167" sap2010:WorkflowViewState.IdRef="LogMessage_10">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158" xml:space="preserve">"BacktestReportPath: " + settingsDict["BacktestReportPath"] + Environment.NewLine +
"setFileStepsID: " + setFileStepsID + Environment.NewLine +
"Type: MT4 Backtest Report" + Environment.NewLine +
"EA: " + ea + Environment.NewLine +
"CurrentFile: " + CurrentFile + Environment.NewLine +
"OutputFolder: " + System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"].ToString()) + Environment.NewLine +
"DB Path: C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db" + Environment.NewLine +
"Summary Metrics: _summary_metrics.csv" + Environment.NewLine +
"Config: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" + Environment.NewLine +
"Perf Criteria: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" Name="process_optimization_report">
                          <p:InvokeMethod.Instance>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">pyObject</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Instance>
                          <p:InvokeMethod.Parameters>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194" xml:space="preserve">new List&lt;object&gt;
{
    settingsDict["OptimizationPath"], // html_report_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", // db_path
    setFileStepsID, // step_id
    "C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" // perf_criteria_path (optional)
};</CSharpValue>
                            </InArgument>
                          </p:InvokeMethod.Parameters>
                          <p:InvokeMethod.Result>
                            <OutArgument x:TypeArguments="p:PythonObject">
                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">pyResult</CSharpReference>
                            </OutArgument>
                          </p:InvokeMethod.Result>
                        </p:InvokeMethod>
                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_8">
                          <p:GetObject.PythonObject>
                            <InArgument x:TypeArguments="p:PythonObject">
                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">pyResult</CSharpValue>
                            </InArgument>
                          </p:GetObject.PythonObject>
                          <p:GetObject.Result>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">jsonString</CSharpReference>
                            </OutArgument>
                          </p:GetObject.Result>
                        </p:GetObject>
                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_10">
                          <ui:DeserializeJson.JsonObject>
                            <OutArgument x:TypeArguments="njl:JObject">
                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">jsonObj</CSharpReference>
                            </OutArgument>
                          </ui:DeserializeJson.JsonObject>
                          <ui:DeserializeJson.JsonString>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">jsonString</CSharpValue>
                            </InArgument>
                          </ui:DeserializeJson.JsonString>
                        </ui:DeserializeJson>
                        <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_31">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">best_pass_number</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">jsonObj["best_pass_number"].ToString()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">best_pass_number</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                      </Sequence>
                      <If sap:VirtualizedContainerService.HintSize="556,3865.5" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">best_pass_number != ""</CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="554,3635.5" sap2010:WorkflowViewState.IdRef="Sequence_55">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Assign Best Pass Variable" sap:VirtualizedContainerService.HintSize="520,314" sap2010:WorkflowViewState.IdRef="Sequence_48">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_32">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">bestPassSetFilePath</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">Path.Combine(Path.GetDirectoryName(aiSetFilePath), Path.GetFileNameWithoutExtension(aiSetFilePath)+ $"-{best_pass_number}.set")</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="434,106.5" sap2010:WorkflowViewState.IdRef="Assign_33">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">bestPassBacktestReportPath</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">Path.Combine(Path.GetDirectoryName(aiSetFilePath), Path.GetFileNameWithoutExtension(aiSetFilePath)+ $"-{best_pass_number}-backtest_report.htm")</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SelectBestPass - Invoke Workflow File (SelectBestPass.xaml)" sap:VirtualizedContainerService.HintSize="520,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SelectBestPass.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="bestPassBacktestReportPath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">bestPassBacktestReportPath</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="bestPassPath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">bestPassSetFilePath</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="bestPass">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">best_pass_number</CSharpValue>
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Sequence DisplayName="Extract Best Pass Backtest Report to DB" sap:VirtualizedContainerService.HintSize="520,1167.5" sap2010:WorkflowViewState.IdRef="Sequence_49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="468,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_9" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\extract_mt4_report.py">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">pyObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                              </p:LoadScript>
                              <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="468,376" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="434,117" sap2010:WorkflowViewState.IdRef="Assign_40">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Object[]">
                                      <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">logList</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Object[]">
                                      <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206" xml:space="preserve">new List&lt;object&gt; {
    bestPassBacktestReportPath,                                        // html_file
    setFileStepsID,                                                           // step_id
    "Best Pass Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    bestPassSetFilePath,                                                   // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}.ToArray()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">"Extract Best Pass Backtest Report to DB - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                              </Sequence>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="468,57" sap2010:WorkflowViewState.IdRef="CommentOut_25">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,227" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,167" sap2010:WorkflowViewState.IdRef="LogMessage_12">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171" xml:space="preserve">"BacktestReportPath: " + settingsDict["BacktestReportPath"] + Environment.NewLine +
"setFileStepsID: " + setFileStepsID + Environment.NewLine +
"Type: MT4 Backtest Report" + Environment.NewLine +
"EA: " + ea + Environment.NewLine +
"CurrentFile: " + CurrentFile + Environment.NewLine +
"OutputFolder: " + System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"].ToString()) + Environment.NewLine +
"DB Path: C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db" + Environment.NewLine +
"Summary Metrics: _summary_metrics.csv" + Environment.NewLine +
"Config: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" + Environment.NewLine +
"Perf Criteria: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="468,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" Name="process_mt4_report">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">pyObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196" xml:space="preserve">//new List&lt;object&gt; { settingsDict["BacktestReportPath"], setFileStepsID,  "MT4 Backtest Report", ea,  CurrentFile.ToString(), System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", "_summary_metrics.csv" }
new List&lt;object&gt; {
    bestPassBacktestReportPath,                                        // html_file
    setFileStepsID,                                                           // step_id
    "Best Pass Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    bestPassSetFilePath,                                                   // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="468,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_9">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="468,167" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                            <Sequence DisplayName="Create Best Pass Backtest Complete Steps" sap:VirtualizedContainerService.HintSize="520,1869" sap2010:WorkflowViewState.IdRef="Sequence_50">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_10" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="486,117" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176" xml:space="preserve">new object[] {
    setFileID,                                  // job_id
    2,                                          // step_number
    "Best Pass Backtest Completed", // step_name
    bestPassSetFilePath,                     // file_path
    "Best Pass set file " + bestPassSetFilePath + " at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                     // version
    "",                                         // meta_json (e.g., "{}" or your JSON string)
    "Completed"                                 // status
}</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="SerializeJson_7">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="486,374.5" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_41">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Object[]">
                                      <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">logList</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Object[]">
                                      <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">paramsList.ToArray()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">"Create Best Pass Backtest Complete Steps - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                              </Sequence>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_94">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_10">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,176" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_12">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="486,115.5" sap2010:WorkflowViewState.IdRef="Assign_37">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">setFileStepsID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271.5" sap2010:WorkflowViewState.IdRef="CommentOut_26">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169.5" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.5" sap2010:WorkflowViewState.IdRef="MessageBox_13">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">setFileStepsID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="create Optimzation set_file_artifacts" sap:VirtualizedContainerService.HintSize="520,48" sap2010:WorkflowViewState.IdRef="Sequence_51">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="486,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_11" ScriptFile="C:\Users\Philip\Documents\GitHub\mt4_optimizer\run_sqlite_query.py">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="486,115.5" sap2010:WorkflowViewState.IdRef="Assign_36">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">new object[] { setFileStepsID, "Best Pass set_file", bestPassSetFilePath, "" }</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="SerializeJson_8">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="486,374.5" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_42">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Object[]">
                                      <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">logList</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Object[]">
                                      <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">paramsList.ToArray()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">"create Optimzation set_file_artifacts - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                              </Sequence>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_11">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="486,176" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="486,123.5" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_13">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="486,115.5" sap2010:WorkflowViewState.IdRef="Assign_38">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">setFileArtifactsID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,271.5" sap2010:WorkflowViewState.IdRef="CommentOut_27">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,169.5" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.5" sap2010:WorkflowViewState.IdRef="MessageBox_14">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">setFileArtifactsID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="554,90.5" sap2010:WorkflowViewState.IdRef="Sequence_56">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="556,187" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True">
                        <ui:MoveFile.Destination>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">Path.Combine("C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\01_user_inputs\\Processed", Path.GetFileName(CurrentFile.ToString()))</CSharpValue>
                          </InArgument>
                        </ui:MoveFile.Destination>
                        <ui:MoveFile.Path>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">CurrentFile.ToString()</CSharpValue>
                          </InArgument>
                        </ui:MoveFile.Path>
                      </ui:MoveFile>
                    </Sequence>
                  </ActivityAction>
                </p:PythonScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:PythonScope>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
      </ui:ForEachFileX>
    </Sequence>
  </Sequence>
</Activity>