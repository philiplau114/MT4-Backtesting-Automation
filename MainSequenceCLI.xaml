<Activity mc:Ignorable="sap sap2010" x:Class="MainSequence2" this:MainSequence2.in_InputSetFilePath="C:\Users\Philip\Documents\GitHub\EA_Automation\01_user_inputs\PX3.71_GBPUSD_M30_1500_P4606_DD691_20220822-20250822_SL800_WR60.67_PF1.98_T539_M454776070_V1_S307.set" this:MainSequence2.in_JobId="1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/python" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sds="clr-namespace:System.Data.SQLite;assembly=System.Data.SQLite" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:uwaj="clr-namespace:UiPath.Web.Activities.JSON;assembly=UiPath.Web.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_ErrorMessage" Type="OutArgument(x:String)" />
    <x:Property Name="out_Artifacts" Type="OutArgument(x:String)" />
    <x:Property Name="out_Status" Type="OutArgument(x:String)" />
    <x:Property Name="out_worker_JobId" Type="OutArgument(x:String)" />
    <x:Property Name="in_InputSetFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_JobId" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Web.Activities.JSON.Models</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.Python.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Web.Activities.JSON</x:String>
      <x:String>UiPath.Sdk.Activities</x:String>
      <x:String>UiPath.Sdk.Activities.DependencyInjection</x:String>
      <x:String>UiPath.Sdk.Activities.DependencyInjection.Contracts</x:String>
      <x:String>System.Data.SQLite</x:String>
      <x:String>System.Data.Common</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.GSuite.Drive.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Enums</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities.Drive.Filters</x:String>
      <x:String>UiPath.GSuite.Activities.Filters</x:String>
      <x:String>UiPath.GSuite.Drive.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SQLite</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Xml.ReaderWriter</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MainSequenceCLI" sap:VirtualizedContainerService.HintSize="1347,3918" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="allArtifacts" />
      <Variable x:TypeArguments="s:String[]" Name="optimizationFiles" />
      <Variable x:TypeArguments="s:String[]" Name="backtestFiles" />
      <Variable x:TypeArguments="uix:NAppCloseMode" Name="closeMode">
        <Variable.Default>
          <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">NAppCloseMode.Never</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="totalPasses" />
      <Variable x:TypeArguments="scg:List(x:Int32)" Name="passIdList">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">new List&lt;Int32&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="optimization_pass_id" />
      <Variable x:TypeArguments="x:Object" Name="pyResultDict" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyResultObject" />
      <Variable x:TypeArguments="x:String" Name="paramsJson" />
      <Variable x:TypeArguments="s:Object[]" Name="paramsList" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyScriptObject" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSetFileJobs" />
      <Variable x:TypeArguments="njl:JObject" Name="actualDataObj" />
      <Variable x:TypeArguments="x:String" Name="ea" />
      <Variable x:TypeArguments="x:String" Name="timeframe" />
      <Variable x:TypeArguments="x:String" Name="symbol" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonObj" />
      <Variable x:TypeArguments="x:String" Name="jsonString" />
      <Variable x:TypeArguments="x:String" Name="displayText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="resultDict">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">new Dictionary&lt;string, object&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="p:PythonObject" Name="pyResult" />
      <Variable x:TypeArguments="p:PythonObject" Name="pyObject" />
      <Variable x:TypeArguments="sds:SQLiteConnection" Name="dbConnection" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtSettings" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtEAMap" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="eaMapDict">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">new Dictionary&lt;string, string&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="settingsDict">
        <Variable.Default>
          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">new Dictionary&lt;string, string&gt;()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="dtSymbol" />
      <Variable x:TypeArguments="sd:DataTable" Name="queryResult" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="sqlDBconnection" />
      <Variable x:TypeArguments="x:String" Name="setFileID" />
      <Variable x:TypeArguments="x:String" Name="setFileStepsID" />
      <Variable x:TypeArguments="x:String" Name="aiSetFilePath" />
      <Variable x:TypeArguments="x:String" Name="best_pass_number" />
      <Variable x:TypeArguments="x:String" Name="bestPassSetFilePath" />
      <Variable x:TypeArguments="x:String" Name="bestPassBacktestReportPath" />
      <Variable x:TypeArguments="x:String" Name="CurrentFile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap:VirtualizedContainerService.HintSize="556,3895" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReadConfigSequence - Invoke Workflow File (ReadConfigSequence.xaml)" sap:VirtualizedContainerService.HintSize="522,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ReadConfigSequence.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtSymbol">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">dtSymbol</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtEAMap">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">dtEAMap</CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtSettings">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">dtSettings</CSharpReference>
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="ConfigPath">.\data\config.xlsx</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="522,57" sap2010:WorkflowViewState.IdRef="CommentOut_23">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="517.3333333333334,373.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_68">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.set" sap:VirtualizedContainerService.HintSize="483.55555555555554,313.77777777777777" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="True">
              <ui:ForEachFileX.Body>
                <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="536.8888888888889,2621.777777777778" sap2010:WorkflowViewState.IdRef="Sequence_44">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" sap:VirtualizedContainerService.HintSize="503.1111111111111,120" sap2010:WorkflowViewState.IdRef="StartProcess_1">
                      <ui:StartProcess.FileName>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">settingsDict["MT4Path"]</CSharpValue>
                        </InArgument>
                      </ui:StartProcess.FileName>
                    </ui:StartProcess>
                    <uix:NCheckState DisplayName="Check App State 'Navigator'" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="503.1111111111111,56.888888888888886" sap2010:WorkflowViewState.IdRef="NCheckState_1" Version="V5">
                      <uix:NCheckState.IfExists>
                        <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="450,92" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </uix:NCheckState.IfExists>
                      <uix:NCheckState.IfNotExists>
                        <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="526,438" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="492,376" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="5">
                            <ui:RetryScope.ActivityBody>
                              <ActivityAction>
                                <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="450,174" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Delay Duration="00:00:30" sap:VirtualizedContainerService.HintSize="416,114" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                </Sequence>
                              </ActivityAction>
                            </ui:RetryScope.ActivityBody>
                            <ui:RetryScope.Condition>
                              <ActivityFunc x:TypeArguments="x:Boolean" />
                            </ui:RetryScope.Condition>
                          </ui:RetryScope>
                        </Sequence>
                      </uix:NCheckState.IfNotExists>
                      <uix:NCheckState.Target>
                        <uix:TargetAnchorable ContentHash="cjBCeNqZOE6_7tJQTdhESA" DesignTimeRectangle="11, 473, 276, 321" FullSelectorArgument="&lt;wnd cls='Afx:*' title='Navigator' /&gt;&lt;ctrl name='Navigator' role='client' /&gt;" Guid="76f776f0-f813-4952-a93f-0044b65eb144" InformativeScreenshot="7ebd6f8b7260cada5d39c6ad6dbcfd1e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/kB1PgRstqk68u8jzZALSIA" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' title='892422018: VantageInternational-Demo - Demo Account - Vantage In*' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="Interactive" />
                      </uix:NCheckState.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uix:NCheckState>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,56.888888888888886" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1124,1394" sap2010:WorkflowViewState.IdRef="Sequence_54">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <uix:NCheckState DisplayName="Check App State 'Alpari MT4'" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="1090,1334" sap2010:WorkflowViewState.IdRef="NCheckState_2" Version="V5">
                            <uix:NCheckState.IfExists>
                              <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="518,638" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uix:NApplicationCard AttachMode="ByInstance" DisplayName="MT4" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="484,576" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" ScopeGuid="fa1c9beb-5296-400a-aeaf-0f40a1bacbb3" Version="V2">
                                  <uix:NApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,282" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click ''Login''" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,220" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="fa1c9beb-5296-400a-aeaf-0f40a1bacbb3" Version="V5">
                                          <uix:NClick.Target>
                                            <uix:TargetAnchorable CVScreenId="7b365c50-a1f9-4752-9b80-be30f5a06ad3" ContentHash="-fVYDhP8E0mPg1TbAtITsA" CvElementArea="236, 401, 168, 46" CvTextArea="293, 412, 52, 26" CvTextArgument="Login" CvType="Button" DesignTimeRectangle="238, 402, 165, 44" DesignTimeScaleFactor="2" ElementType="Button" FullSelectorArgument="&lt;wnd ctrlid='1' title='Login' /&gt;" FuzzySelectorArgument="&lt;wnd ctrlid='1' title='Login' matching:ctrlid='fuzzy' fuzzylevel:ctrlid='0.0' matching:title='fuzzy' fuzzylevel:title='0.0' check:text='Login' /&gt;" Guid="e65caa6e-d7c0-420b-83ea-b951f93bd8e4" InformativeScreenshot="0c87ff1ae47cefb666cf3d47dcae2c57.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/VhGNbjqqzU--HQuI1VpyiQ" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32770' title='Alpari MT4' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                              <uix:TargetAnchorable.PointOffset>
                                                <uix:PointOffset />
                                              </uix:TargetAnchorable.PointOffset>
                                            </uix:TargetAnchorable>
                                          </uix:NClick.Target>
                                          <uix:NClick.VerifyOptions>
                                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                              <uix:VerifyExecutionOptions.Retry>
                                                <InArgument x:TypeArguments="x:Boolean" />
                                              </uix:VerifyExecutionOptions.Retry>
                                              <uix:VerifyExecutionOptions.Timeout>
                                                <InArgument x:TypeArguments="x:Double" />
                                              </uix:VerifyExecutionOptions.Timeout>
                                            </uix:VerifyExecutionOptions>
                                          </uix:NClick.VerifyOptions>
                                        </uix:NClick>
                                      </Sequence>
                                    </ActivityAction>
                                  </uix:NApplicationCard.Body>
                                  <uix:NApplicationCard.TargetApp>
                                    <uix:TargetApp Area="0, 0, 4122, 2090" ContentHash="ARtLa8TyAkCZONOgi9tN9g" FilePath="C:\\Program Files (x86)\\Vantage International MT4\\terminal.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAXaSURBVHhe7ZhpbBRlGMenyGFLQYho8OAwJrRdKaAih3Iopbs72+3O7OzOTGEpqAltkS9QPBIlMaImGsSIEMPxSYJREaMx+oFoIhHl8AgxKOWIUtrKUe7IUc6/eZ7tu26nG9HuzNYwM8kvM3n23eP5vc/7zjMr3RSMw81I1oDb8ARYA27DE2ANuA1PgDXgNjwB1oDb8ARYA27DE2ANuA1PgDXgNjwB1kBX6SXr6BXKgKyjp6zzmJ40zias399VbBHQIxCDVKZAmhaBNM1yLlOQ59d4nBTUIQWMJHSdBT0y/I6ukLUASr53yMCQRA2GV9dh2KxaDK+uxbBqOtdxvDAyEz3lOPrLGoaFFAwNKbgrpODuLjAkpODOkILewZgtErISQKUtTVdxu/EEPtj8LVqOn0Bz63E0tR5jDp04iT1NLahZvgoFYQOTQn68GxuHrfoo/GSMxPd6KXbopXy+HmLcD3op3tHGY5Ac5UqgZWX9Xf+F7AS0V0CfCgNzlr6NP89fQKZjW8Ne3DtnHm4uVzA2XIE3oxOx2/DhRNUI5qhZhNbrQGNOVo3AHsOHeGR6qgK6VQCRXgUfb9mGK1ev4tq1a3wm6Dh7oQ0vrvsQ+ZEEJH8MA0IaKir92Bh7EHsNH/4wi9FkFqPRLMFBszgj9Dqd12jjbJt9InsB7VVAIuIvL8XRU6c5aZKQfv61sRmjaxdCKo8ij+4MwTjvBYvUKdiul6LZLMYhs4jPVij5w2YRdhojWRx/Z4bf0hWyFkBwFZRHuQrWfbk5NfOUuhBwru0iXlq/Af3VRPKuQO8J6ugra5gYlrFaG49dxn0Zk2/h2S/B8ugEW2efsEWAQPJrmLpoMZqPHeekr1qqoKGpBY8seD5ZMe3Vk9fObbKKGZEybNFHc8LpAo6YRbwBTgjLPNb6vdlgmwBRBQO12Vj1+SZcunw5lbwQQDF6jcbQWHqPEEGzeousYbE6CfvN5L5Aa57OB8wSvBZ9GANsnn3CNgECml2aZZrt9NkX1UDVQVVC1SLeIyqBlsMCdQr2GT7eD0jAIbMYX+uj8VBFyLZ1n46tArgK/Br6qQle7+fbLv5dBXwF3h9on6D9Ir0KaGb7yRqebhdAM0/sN3y8URbKGkuyc/YJWwUQYimMql2IXQcOdqgCcaY7Bd0xaKzYD0gAJUnJpgv4Kj4GJRVh20tf4IgA2uX7Vs7As2vXpZojkTxfA/jkux0YbD7JsuiBSQrGUwKoN6DGp8HwYZ7yKAqCMUdmn7BdAJFsjqK4p7oOW3fvSSWeLqL19BmYry5LPikGKMGOFUA7/6exB7j3d2r2CccE5PmpRTbx1Io1OH32XIfkxfHNrt388ESdZA/ZYAH16hT8ZpZwyzs7Mg19HJx9whEBhNgLhiTmYtOPOzskLkScOXce81euQX7Y5Ba5UI6lKuD92FjcEVIdnX3COQFpLbL+yhtc8unJi2N7wz6Uzl2QEvCcOhnb9FIoleX8OXY88PwTjgkgeHMrj/JmR5ueODq2yG1Ysn4D8pUECgIqnolOxQptAgbLzs8+4aiA9CqILVmKwydPJQV0elBqgq+mHn39ChJKGR4LBx1f+wJHBRCiORqkP47VX2zC5StXUskLAdQwLXnvIwxUE7g1EEGBHOv0OU7huAABSZhc/wL/U5SpChqPtPLrUsCev7r+LTkRIKpgQLQayzZ+hrZLlzpVATVMdctX8R0huWw6f44T5EQAkbwtahhTV89r3irgl8Ym3D9vEYvi5ijDZzhBbgX4NRQqM/lB6cLF5IMSHXRNMfr3+IYVQAgJ9KD08++NKQF0TTGqkFwmT+RcQF4ghvxwFeavXMs9AEHXFKPXbmgBBDdH01UMnVWD7Q17GbqmGL1mHe80OReQ2gsiMzHr9beY7lj7gpwLEFCy+ZVVTHckLug2AQStecIazyXdKoD6fKd7/evRrQL+D3gCrAG34QmwBtyGJ8AacBueAGvAbXgCrAG34QmwBtyGJ8AacBt/AZBDvJmSsyGMAAAAAElFTkSuQmCC" InformativeScreenshot="c49409ac1f4d443f7c5e3721b318a83e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/EYOcM0uOCU2G8d1ODrJiow" Selector="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' /&gt;" Version="V2" />
                                  </uix:NApplicationCard.TargetApp>
                                </uix:NApplicationCard>
                              </Sequence>
                            </uix:NCheckState.IfExists>
                            <uix:NCheckState.IfNotExists>
                              <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="518,1092" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uix:NApplicationCard AttachMode="ByInstance" DisplayName="MT4" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="484,1030" sap2010:WorkflowViewState.IdRef="NApplicationCard_2" ScopeGuid="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V2">
                                  <uix:NApplicationCard.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,736" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click ''File''" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,227" sap2010:WorkflowViewState.IdRef="NClick_3" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V5">
                                          <uix:NClick.Target>
                                            <uix:TargetAnchorable CVScreenId="8eed95f1-9ece-4c95-bc68-025b057f3302" ContentHash="9taQFOxVuUC6DqJQ5hmzLQ" CvTextArea="27, 64, 40, 24" CvTextArgument="File" CvType="Text" DesignTimeRectangle="13, 58, 75, 38" DesignTimeScaleFactor="2" FullSelectorArgument="&lt;ctrl automationid='MenuBar' name='應用程式' role='menu bar' /&gt;&lt;ctrl name='File' role='menu item' /&gt;" FuzzySelectorArgument="&lt;ctrl automationid='MenuBar' name='應用程式' role='menu bar' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' matching:name='fuzzy' fuzzylevel:name='0.0' /&gt;&lt;ctrl name='File' role='menu item' automationid='' matching:name='fuzzy' fuzzylevel:name='0.0' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' check:text='File' /&gt;" Guid="69129ea5-a7b9-49f8-99a2-6005ae2371f0" InformativeScreenshot="925b6d6ebcb4ac08279a3d9c55a90c2c.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/O2I8Z7gqr0yqQGE64AWGjg" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' title='251818210: Alpari-Pro.ECN-Demo - Demo Account - Alpari' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                              <uix:TargetAnchorable.Anchors>
                                                <scg:List x:TypeArguments="uix:ITarget" Capacity="0" />
                                              </uix:TargetAnchorable.Anchors>
                                              <uix:TargetAnchorable.PointOffset>
                                                <uix:PointOffset />
                                              </uix:TargetAnchorable.PointOffset>
                                            </uix:TargetAnchorable>
                                          </uix:NClick.Target>
                                          <uix:NClick.VerifyOptions>
                                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                              <uix:VerifyExecutionOptions.Retry>
                                                <InArgument x:TypeArguments="x:Boolean" />
                                              </uix:VerifyExecutionOptions.Retry>
                                              <uix:VerifyExecutionOptions.Timeout>
                                                <InArgument x:TypeArguments="x:Double" />
                                              </uix:VerifyExecutionOptions.Timeout>
                                            </uix:VerifyExecutionOptions>
                                          </uix:NClick.VerifyOptions>
                                        </uix:NClick>
                                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click ''Login to Trade Account''" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,227" sap2010:WorkflowViewState.IdRef="NClick_4" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V5">
                                          <uix:NClick.Target>
                                            <uix:TargetAnchorable CVScreenId="8c6ea6a0-9314-412b-b66e-76be056c7071" ContentHash="oqTr06jyGEWv2PUiNIqFdA" CvTextArea="66, 290, 266, 30" CvTextArgument="Login to Trade Account" CvType="Text" DesignTimeRectangle="3, 283, 414, 41" DesignTimeScaleFactor="2" FullSelectorArgument="&lt;ctrl name='File' role='popup menu' /&gt;&lt;ctrl automationid='35429' /&gt;" FuzzySelectorArgument="&lt;ctrl name='File' role='popup menu' matching:name='fuzzy' fuzzylevel:name='0.0' /&gt;&lt;ctrl automationid='35429' role='menu item' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' check:text='Login to Trade Account' /&gt;" Guid="49513924-90bb-49ea-94ab-89bd4c62d935" InformativeScreenshot="1445cd16ea9b33347fa91cf23a219f28.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/Gt_l1utDWUiIzv8wam6smQ" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32768' idx='*' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                              <uix:TargetAnchorable.PointOffset>
                                                <uix:PointOffset />
                                              </uix:TargetAnchorable.PointOffset>
                                            </uix:TargetAnchorable>
                                          </uix:NClick.Target>
                                          <uix:NClick.VerifyOptions>
                                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                              <uix:VerifyExecutionOptions.Retry>
                                                <InArgument x:TypeArguments="x:Boolean" />
                                              </uix:VerifyExecutionOptions.Retry>
                                              <uix:VerifyExecutionOptions.Timeout>
                                                <InArgument x:TypeArguments="x:Double" />
                                              </uix:VerifyExecutionOptions.Timeout>
                                            </uix:VerifyExecutionOptions>
                                          </uix:NClick.VerifyOptions>
                                        </uix:NClick>
                                        <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Login'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,220" sap2010:WorkflowViewState.IdRef="NClick_5" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V5">
                                          <uix:NClick.Target>
                                            <uix:TargetAnchorable CVScreenId="7b365c50-a1f9-4752-9b80-be30f5a06ad3" ContentHash="-fVYDhP8E0mPg1TbAtITsA" CvElementArea="236, 401, 168, 46" CvTextArea="293, 412, 52, 26" CvTextArgument="Login" CvType="Button" DesignTimeRectangle="238, 402, 165, 44" DesignTimeScaleFactor="2" ElementType="Button" FullSelectorArgument="&lt;wnd ctrlid='1' title='Login' /&gt;" FuzzySelectorArgument="&lt;wnd ctrlid='1' title='Login' matching:ctrlid='fuzzy' fuzzylevel:ctrlid='0.0' matching:title='fuzzy' fuzzylevel:title='0.0' check:text='Login' /&gt;" Guid="e65caa6e-d7c0-420b-83ea-b951f93bd8e4" InformativeScreenshot="0c87ff1ae47cefb666cf3d47dcae2c57.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/VhGNbjqqzU--HQuI1VpyiQ" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32770' title='Alpari MT4' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                              <uix:TargetAnchorable.Anchors>
                                                <scg:List x:TypeArguments="uix:ITarget" Capacity="0" />
                                              </uix:TargetAnchorable.Anchors>
                                              <uix:TargetAnchorable.PointOffset>
                                                <uix:PointOffset />
                                              </uix:TargetAnchorable.PointOffset>
                                            </uix:TargetAnchorable>
                                          </uix:NClick.Target>
                                          <uix:NClick.VerifyOptions>
                                            <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                              <uix:VerifyExecutionOptions.Retry>
                                                <InArgument x:TypeArguments="x:Boolean" />
                                              </uix:VerifyExecutionOptions.Retry>
                                              <uix:VerifyExecutionOptions.Timeout>
                                                <InArgument x:TypeArguments="x:Double" />
                                              </uix:VerifyExecutionOptions.Timeout>
                                            </uix:VerifyExecutionOptions>
                                          </uix:NClick.VerifyOptions>
                                        </uix:NClick>
                                      </Sequence>
                                    </ActivityAction>
                                  </uix:NApplicationCard.Body>
                                  <uix:NApplicationCard.TargetApp>
                                    <uix:TargetApp Area="0, 0, 4122, 2090" ContentHash="ARtLa8TyAkCZONOgi9tN9g" FilePath="C:\\Program Files (x86)\\Vantage International MT4\\terminal.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAXaSURBVHhe7ZhpbBRlGMenyGFLQYho8OAwJrRdKaAih3Iopbs72+3O7OzOTGEpqAltkS9QPBIlMaImGsSIEMPxSYJREaMx+oFoIhHl8AgxKOWIUtrKUe7IUc6/eZ7tu26nG9HuzNYwM8kvM3n23eP5vc/7zjMr3RSMw81I1oDb8ARYA27DE2ANuA1PgDXgNjwB1oDb8ARYA27DE2ANuA1PgDXgNjwB1kBX6SXr6BXKgKyjp6zzmJ40zias399VbBHQIxCDVKZAmhaBNM1yLlOQ59d4nBTUIQWMJHSdBT0y/I6ukLUASr53yMCQRA2GV9dh2KxaDK+uxbBqOtdxvDAyEz3lOPrLGoaFFAwNKbgrpODuLjAkpODOkILewZgtErISQKUtTVdxu/EEPtj8LVqOn0Bz63E0tR5jDp04iT1NLahZvgoFYQOTQn68GxuHrfoo/GSMxPd6KXbopXy+HmLcD3op3tHGY5Ac5UqgZWX9Xf+F7AS0V0CfCgNzlr6NP89fQKZjW8Ne3DtnHm4uVzA2XIE3oxOx2/DhRNUI5qhZhNbrQGNOVo3AHsOHeGR6qgK6VQCRXgUfb9mGK1ev4tq1a3wm6Dh7oQ0vrvsQ+ZEEJH8MA0IaKir92Bh7EHsNH/4wi9FkFqPRLMFBszgj9Dqd12jjbJt9InsB7VVAIuIvL8XRU6c5aZKQfv61sRmjaxdCKo8ij+4MwTjvBYvUKdiul6LZLMYhs4jPVij5w2YRdhojWRx/Z4bf0hWyFkBwFZRHuQrWfbk5NfOUuhBwru0iXlq/Af3VRPKuQO8J6ugra5gYlrFaG49dxn0Zk2/h2S/B8ugEW2efsEWAQPJrmLpoMZqPHeekr1qqoKGpBY8seD5ZMe3Vk9fObbKKGZEybNFHc8LpAo6YRbwBTgjLPNb6vdlgmwBRBQO12Vj1+SZcunw5lbwQQDF6jcbQWHqPEEGzeousYbE6CfvN5L5Aa57OB8wSvBZ9GANsnn3CNgECml2aZZrt9NkX1UDVQVVC1SLeIyqBlsMCdQr2GT7eD0jAIbMYX+uj8VBFyLZ1n46tArgK/Br6qQle7+fbLv5dBXwF3h9on6D9Ir0KaGb7yRqebhdAM0/sN3y8URbKGkuyc/YJWwUQYimMql2IXQcOdqgCcaY7Bd0xaKzYD0gAJUnJpgv4Kj4GJRVh20tf4IgA2uX7Vs7As2vXpZojkTxfA/jkux0YbD7JsuiBSQrGUwKoN6DGp8HwYZ7yKAqCMUdmn7BdAJFsjqK4p7oOW3fvSSWeLqL19BmYry5LPikGKMGOFUA7/6exB7j3d2r2CccE5PmpRTbx1Io1OH32XIfkxfHNrt388ESdZA/ZYAH16hT8ZpZwyzs7Mg19HJx9whEBhNgLhiTmYtOPOzskLkScOXce81euQX7Y5Ba5UI6lKuD92FjcEVIdnX3COQFpLbL+yhtc8unJi2N7wz6Uzl2QEvCcOhnb9FIoleX8OXY88PwTjgkgeHMrj/JmR5ueODq2yG1Ysn4D8pUECgIqnolOxQptAgbLzs8+4aiA9CqILVmKwydPJQV0elBqgq+mHn39ChJKGR4LBx1f+wJHBRCiORqkP47VX2zC5StXUskLAdQwLXnvIwxUE7g1EEGBHOv0OU7huAABSZhc/wL/U5SpChqPtPLrUsCev7r+LTkRIKpgQLQayzZ+hrZLlzpVATVMdctX8R0huWw6f44T5EQAkbwtahhTV89r3irgl8Ym3D9vEYvi5ijDZzhBbgX4NRQqM/lB6cLF5IMSHXRNMfr3+IYVQAgJ9KD08++NKQF0TTGqkFwmT+RcQF4ghvxwFeavXMs9AEHXFKPXbmgBBDdH01UMnVWD7Q17GbqmGL1mHe80OReQ2gsiMzHr9beY7lj7gpwLEFCy+ZVVTHckLug2AQStecIazyXdKoD6fKd7/evRrQL+D3gCrAG34QmwBtyGJ8AacBueAGvAbXgCrAG34QmwBtyGJ8AacBt/AZBDvJmSsyGMAAAAAElFTkSuQmCC" InformativeScreenshot="c49409ac1f4d443f7c5e3721b318a83e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/EYOcM0uOCU2G8d1ODrJiow" Selector="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' /&gt;" Version="V2" />
                                  </uix:NApplicationCard.TargetApp>
                                </uix:NApplicationCard>
                              </Sequence>
                            </uix:NCheckState.IfNotExists>
                            <uix:NCheckState.Target>
                              <uix:TargetAnchorable ContentHash="Y3YseeS6nkO3bvtneB1ZbQ" DesignTimeRectangle="0, 0, 821, 477" Guid="c98896aa-f620-4d35-b871-6721bb0152ae" InformativeScreenshot="ad51ac0426e8a4efdab0bb03567d3249.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/CGY0k_Z9DkaFBy51uHvp-Q" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32770' title='Alpari MT4' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="Interactive" />
                            </uix:NCheckState.Target>
                          </uix:NCheckState>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <Sequence DisplayName="Prepare Setting Dict Sequence" sap:VirtualizedContainerService.HintSize="503.1111111111111,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="469.3333333333333,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                            <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">settingsDict</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                            <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1" xml:space="preserve">dtSettings.AsEnumerable()
    .Where(r =&gt; !string.IsNullOrWhiteSpace(r["Name"].ToString()))
    .ToDictionary(
        r =&gt; r["Name"].ToString().Trim(),
        r =&gt; r["Value"].ToString().Trim()
    )</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <If sap:VirtualizedContainerService.HintSize="469.3333333333333,500.8888888888889" sap2010:WorkflowViewState.IdRef="If_1">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">!string.IsNullOrWhiteSpace(settingsDict["BacktestPeriodinYear"])</CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.55555555555554,280.44444444444446" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">settingsDict["DateTo"]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">DateTime.Now.ToString("dd.yyyy.MM")</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">settingsDict["DateFrom"]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">DateTime.Now.AddYears(-int.Parse(settingsDict["BacktestPeriodinYear"])).ToString("dd.yyyy.MM")</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.55555555555554,90.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <p:PythonScope OperationTimeout="{x:Null}" DisplayName="Python Scope" sap:VirtualizedContainerService.HintSize="503.1111111111111,2271.1111111111113" sap2010:WorkflowViewState.IdRef="PythonScope_1">
                      <p:PythonScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="PythonEngineSessionProperty" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="501.3333333333333,2044.888888888889" sap2010:WorkflowViewState.IdRef="Sequence_43">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="messageString" />
                              <Variable x:TypeArguments="x:String" Name="EAFile" />
                              <Variable x:TypeArguments="s:Object[]" Name="logList" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Extract Set File Info" sap:VirtualizedContainerService.HintSize="467.55555555555554,1109.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_4">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">pyObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">settingsDict["PythonScriptPath1"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" Name="extract_fields_from_csv">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">pyObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193" xml:space="preserve">/*new List&lt;Object&gt; {CurrentFile.ToString(), "C:\\Users\\Philip\\Documents\\GitHub\\mt4_optimizer\\SymbolList.csv"}*/
new List&lt;Object&gt; {CurrentFile.ToString(), settingsDict["SymbolListPath"]}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_4">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">ea</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">jsonObj["EA"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="433.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                <ui:ForEachRow.Body>
                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="503.1111111111111,446.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If sap:VirtualizedContainerService.HintSize="469.3333333333333,386.22222222222223" sap2010:WorkflowViewState.IdRef="If_3">
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">CurrentRow["Code"].ToString().Trim().ToUpper() == ea.Trim().ToUpper()</CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_5">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">EAFile</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">CurrentRow["EAFile"].ToString()</CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.55555555555554,90.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEachRow.Body>
                                <ui:ForEachRow.DataTable>
                                  <InArgument x:TypeArguments="sd:DataTable">
                                    <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">dtEAMap</CSharpValue>
                                  </InArgument>
                                </ui:ForEachRow.DataTable>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEachRow>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Assign_7">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">symbol</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">jsonObj["Symbol"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">timeframe</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">jsonObj["Timeframe"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                            </Sequence>
                            <Sequence DisplayName="create set_file_jobs" sap:VirtualizedContainerService.HintSize="467.55555555555554,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_16">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_5">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_9">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205" xml:space="preserve">//new object[] { "Philip", CurrentFile.ToString(), symbol, timeframe, EAFile, "v1", 0, "pending", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") }
new object[] { 
    settingsDict["UserId"],                            // User ID, from config
    CurrentFile.ToString(),                            // File path
    symbol,                                            // Symbol (variable)
    timeframe,                                         // Timeframe (variable)
    EAFile,                                            // EA file (variable)
    settingsDict["SetVersion"],                        // Set version, from config (add if you want to control via config)
    0,                                                 // Current step (likely always 0 here)
    "Pending",                                         // Status (parameterize if desired)
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),      // Created at
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")       // Updated at
}</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_2">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194" xml:space="preserve">/*new string[] {"C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
	"INSERT INTO set_file_jobs (user_id, original_file, symbol, timeframe, ea, set_version, current_step, status, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 
	paramsJson}*/

new string[] {settingsDict["DBPath"],
	"INSERT INTO set_file_jobs (user_id, original_file, symbol, timeframe, ea, set_version, current_step, status, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 
	paramsJson}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_5">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_10">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">setFileID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_2">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">setFileID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="create set_file_steps" sap:VirtualizedContainerService.HintSize="467.55555555555554,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_6">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206" xml:space="preserve">/*new object[] {
    setFileID,                                         // job_id
    0,                                                 // step_number
    "User Input",                                      // step_name
    CurrentFile.ToString(),                            // file_path
    "User initial input at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                            // version
    "{}",                                              // meta_json
    "initiated"                                        // status
}*/
new object[] {
    setFileID,                                         // job_id
    0,                                                 // step_number
    "User Input",                                      // step_name
    CurrentFile.ToString(),                            // file_path
    "User initial input at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    settingsDict["SetStepVersion"],                                            // version
    "{}",                                              // meta_json
    "Initiated"                                        // status
}</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_3">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_6">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">setFileStepsID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_3">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">setFileStepsID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="create set_file_artifacts" sap:VirtualizedContainerService.HintSize="467.55555555555554,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_7">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_13">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">new object[] { setFileStepsID, "set_file", CurrentFile.ToString(), "" }</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_4">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_7">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_14">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">setFileArtifactsID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_4">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">setFileArtifactsID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="Assign Backtest Variable" sap:VirtualizedContainerService.HintSize="467.55555555555554,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_15">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">settingsDict["SettingsFilePath"]</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">Path.Combine(settingsDict["SettingsFilePath"], Path.GetFileName(CurrentFile.ToString()))</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_16">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">settingsDict["BacktestReportPath"]</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">Path.Combine(settingsDict["BacktestReportPath"], Path.GetFileNameWithoutExtension(CurrentFile.ToString()) + "-backtest_report.htm")</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MT4backtest - Invoke Workflow File (MT4backtest.xaml)" sap:VirtualizedContainerService.HintSize="467.55555555555554,176.44444444444446" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="MT4backtest.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="dtSymbol">
                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">dtSymbol</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="CloseMT4">
                                  <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">NAppCloseMode.Never</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="InitialDeposit">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">settingsDict["InitialDeposit"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="OptimizedParameter">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">settingsDict["OptimizedParameter"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="OptimizationReportPath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">settingsDict["OptimizationPath"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="BacktestReportPath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">settingsDict["BacktestReportPath"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="SettingsFilePath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">settingsDict["SettingsFilePath"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="DateTo">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">settingsDict["DateTo"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="DateFrom">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">settingsDict["DateFrom"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Spread">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">settingsDict["Spread"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Period">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">timeframe</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="btSymbol">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">symbol</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="mode">Backtest</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TargetEA">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">EAFile</CSharpValue>
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Sequence DisplayName="Extract MT4 Report to DB" sap:VirtualizedContainerService.HintSize="467.55555555555554,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_8">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">pyObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">settingsDict["PythonScriptPath3"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_10">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60" xml:space="preserve">"BacktestReportPath: " + settingsDict["BacktestReportPath"] + Environment.NewLine +
"setFileStepsID: " + setFileStepsID + Environment.NewLine +
"Type: MT4 Backtest Report" + Environment.NewLine +
"EA: " + ea + Environment.NewLine +
"CurrentFile: " + CurrentFile + Environment.NewLine +
"OutputFolder: " + System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"].ToString()) + Environment.NewLine +
"DB Path: C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db" + Environment.NewLine +
"Summary Metrics: _summary_metrics.csv" + Environment.NewLine +
"Config: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" + Environment.NewLine +
"Perf Criteria: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" Name="process_mt4_report">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">pyObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197" xml:space="preserve">//new List&lt;object&gt; { settingsDict["BacktestReportPath"], setFileStepsID,  "MT4 Backtest Report", ea,  CurrentFile.ToString(), System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", "_summary_metrics.csv" }
/*new List&lt;object&gt; {
    settingsDict["BacktestReportPath"],                                        // html_file
    setFileStepsID,                                                           // step_id
    "MT4 Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    CurrentFile.ToString(),                                                   // input_set_file
    System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}*/
new List&lt;object&gt; {
    settingsDict["BacktestReportPath"],                         // html_file
    setFileStepsID,                                             // step_id
    "MT4 Backtest Report",                                      // metric_type
    ea,                                                         // EA_name
    CurrentFile.ToString(),                                     // input_set_file
    System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), // output_set_file_path
    settingsDict["DBPath"],                                     // db_path
    "_summary_metrics.csv",                                     // summary_metrics_path (parameterize if needed)
    settingsDict["ConfigPath"],                                 // config
    settingsDict["ConfigPath"]                                  // perf_criteria
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_8">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_7">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_17">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">aiSetFilePath</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">jsonObj["ai_set_file_path"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">aiSetFilePath</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                            <Sequence DisplayName="Create Backtest Completed and Start Optimization Steps" sap:VirtualizedContainerService.HintSize="449.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_9">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_18">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67" xml:space="preserve">new object[] {
    setFileID,                                  // job_id
    1,                                          // step_number
    "Backtest Completed and Start Optimization", // step_name
    aiSetFilePath,                     // file_path
    "New Optimization set file " + aiSetFilePath + " at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                     // version
    "",                                         // meta_json (e.g., "{}" or your JSON string)
    "Completed"                                 // status
}</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_5">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_9">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_8">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_19">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">setFileStepsID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <Sequence DisplayName="create Optimzation set_file_artifacts" sap:VirtualizedContainerService.HintSize="449.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_10">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">new object[] { setFileStepsID, "Optimzation set_file", aiSetFilePath, "" }</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_6">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_10">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_9">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">setFileArtifactsID</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">jsonObj["lastrowid"].ToString()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <Sequence DisplayName="Assign Optimzation Variable" sap:VirtualizedContainerService.HintSize="449.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">settingsDict["SettingsFilePath"]</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">aiSetFilePath</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">settingsDict["OptimizationPath"]</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">Path.Combine(settingsDict["OptimizationPath"], Path.GetFileNameWithoutExtension(aiSetFilePath) + "-OptimizationReport.htm")</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MT4backtest - Invoke Workflow File (MT4backtest.xaml)" sap:VirtualizedContainerService.HintSize="449.77777777777777,176.44444444444446" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="MT4backtest.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="sd:DataTable" x:Key="dtSymbol">
                                  <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">dtSymbol</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="CloseMT4">
                                  <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">NAppCloseMode.Never</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="InitialDeposit">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">settingsDict["InitialDeposit"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="OptimizedParameter">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">settingsDict["OptimizedParameter"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="OptimizationReportPath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">settingsDict["OptimizationPath"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="BacktestReportPath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">settingsDict["BacktestReportPath"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="SettingsFilePath">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">settingsDict["SettingsFilePath"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="DateTo">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">settingsDict["DateTo"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="DateFrom">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">settingsDict["DateFrom"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Spread">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">settingsDict["Spread"]</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="Period">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">timeframe</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="btSymbol">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">symbol</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="mode">Optimzation</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="TargetEA">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">EAFile</CSharpValue>
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <Sequence DisplayName="Extract MT4 Optimization Report to DB" sap:VirtualizedContainerService.HintSize="467.55555555555554,820" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Default="0" Name="currentIndex" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_1">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">pyObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">settingsDict["PythonScriptPath4"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" Name="process_optimization_report_topn">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">pyObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200" xml:space="preserve">/*new List&lt;object&gt;
{
    settingsDict["OptimizationPath"], // html_report_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", // db_path
    setFileStepsID, // step_id
    "C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" // config_xlsx_path
};*/
new List&lt;object&gt;
{
    settingsDict["OptimizationPath"],          // html_report_path
    settingsDict["DBPath"],                    // db_path
    setFileStepsID,                            // step_id
    settingsDict["ConfigPath"]                 // config_xlsx_path
};</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_1">
                                <p:GetObject.PythonObject>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">pyResult</CSharpValue>
                                  </InArgument>
                                </p:GetObject.PythonObject>
                                <p:GetObject.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">jsonString</CSharpReference>
                                  </OutArgument>
                                </p:GetObject.Result>
                              </p:GetObject>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1">
                                <ui:DeserializeJson.JsonObject>
                                  <OutArgument x:TypeArguments="njl:JObject">
                                    <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">jsonObj</CSharpReference>
                                  </OutArgument>
                                </ui:DeserializeJson.JsonObject>
                                <ui:DeserializeJson.JsonString>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103">jsonString</CSharpValue>
                                  </InArgument>
                                </ui:DeserializeJson.JsonString>
                              </ui:DeserializeJson>
                              <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_38">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">
                                    <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">totalPasses</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">jsonObj["top_n_passes"].Count()</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" DisplayName="For Each passObj" sap:VirtualizedContainerService.HintSize="536.8888888888889,2544" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="njl:JToken">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="njl:JToken" Name="passObj" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="535.1111111111111,2444.8888888888887" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="scg:List(x:Int32)" Name="passNumbersList">
                                          <Variable.Default>
                                            <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">new List&lt;Int32&gt;()</CSharpValue>
                                          </Variable.Default>
                                        </Variable>
                                        <Variable x:TypeArguments="x:Int32" Name="pass_number" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If sap:VirtualizedContainerService.HintSize="501.3333333333333,470.6666666666667" sap2010:WorkflowViewState.IdRef="If_4">
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">currentIndex == totalPasses - 1</CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_39">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="uix:NAppCloseMode">
                                                  <CSharpReference x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">closeMode</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="uix:NAppCloseMode">
                                                  <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">NAppCloseMode.Always</CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_40">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="uix:NAppCloseMode">
                                                  <CSharpReference x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">closeMode</CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="uix:NAppCloseMode">
                                                  <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">NAppCloseMode.Never</CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <Sequence DisplayName="Prepare Pass Number and Opt ID Sequence" sap:VirtualizedContainerService.HintSize="501.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_34">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">
                                              <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">pass_number</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">passObj["pass_number"].ToObject&lt;Int32&gt;()</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_35">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">
                                              <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">optimization_pass_id</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">passObj["optimization_pass_id"].ToObject&lt;Int32&gt;()</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,167.55555555555554" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                                          <InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="scg:List(x:Int32)">
                                              <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">passNumbersList</CSharpValue>
                                            </InArgument>
                                          </InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">pass_number</CSharpValue>
                                          </InArgument>
                                        </InvokeMethod>
                                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,167.55555555555554" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
                                          <InvokeMethod.TargetObject>
                                            <InArgument x:TypeArguments="scg:List(x:Int32)">
                                              <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">passIdList</CSharpValue>
                                            </InArgument>
                                          </InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">optimization_pass_id</CSharpValue>
                                          </InArgument>
                                        </InvokeMethod>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">"Pass Number: " + pass_number.ToString() + ", Optimization Pass ID: " + optimization_pass_id.ToString()</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                        </ui:LogMessage>
                                      </Sequence>
                                      <Sequence DisplayName="Assign Best Pass Variable" sap:VirtualizedContainerService.HintSize="501.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_36">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">bestPassSetFilePath</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">Path.Combine(Path.GetDirectoryName(aiSetFilePath), Path.GetFileNameWithoutExtension(aiSetFilePath)+ $"-{pass_number}.set")</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_37">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">bestPassBacktestReportPath</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">Path.Combine(Path.GetDirectoryName(aiSetFilePath), Path.GetFileNameWithoutExtension(aiSetFilePath)+ $"-{pass_number}-backtest_report.htm")</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SelectBestPass - Invoke Workflow File (SelectBestPass.xaml)" sap:VirtualizedContainerService.HintSize="501.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SelectBestPass.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="currentPassIndex">
                                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">currentIndex</CSharpValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="closeMT4">
                                            <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">closeMode</CSharpValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="bestPassBacktestReportPath">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">bestPassBacktestReportPath</CSharpValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="bestPassPath">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">bestPassSetFilePath</CSharpValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="bestPass">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">pass_number.ToString()</CSharpValue>
                                          </InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <Sequence DisplayName="Extract Best Pass Backtest Report to DB" sap:VirtualizedContainerService.HintSize="501.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="449.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_2">
                                          <p:LoadScript.Result>
                                            <OutArgument x:TypeArguments="p:PythonObject">
                                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_67">pyObject</CSharpReference>
                                            </OutArgument>
                                          </p:LoadScript.Result>
                                          <p:LoadScript.ScriptFile>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">settingsDict["PythonScriptPath3"]</CSharpValue>
                                            </InArgument>
                                          </p:LoadScript.ScriptFile>
                                        </p:LoadScript>
                                        <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="449.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,117" sap2010:WorkflowViewState.IdRef="Assign_27">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Object[]">
                                                <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">logList</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Object[]">
                                                <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159" xml:space="preserve">new List&lt;object&gt; {
    bestPassBacktestReportPath,                                        // html_file
    setFileStepsID,                                                           // step_id
    "Best Pass Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    bestPassSetFilePath,                                                   // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}.ToArray()</CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
                                            <ui:LogMessage.Message>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">"Extract Best Pass Backtest Report to DB - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                              </InArgument>
                                            </ui:LogMessage.Message>
                                          </ui:LogMessage>
                                        </Sequence>
                                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="449.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" Name="process_mt4_report">
                                          <p:InvokeMethod.Instance>
                                            <InArgument x:TypeArguments="p:PythonObject">
                                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">pyObject</CSharpValue>
                                            </InArgument>
                                          </p:InvokeMethod.Instance>
                                          <p:InvokeMethod.Parameters>
                                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201" xml:space="preserve">//new List&lt;object&gt; { settingsDict["BacktestReportPath"], setFileStepsID,  "MT4 Backtest Report", ea,  CurrentFile.ToString(), System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", "_summary_metrics.csv" }
/*new List&lt;object&gt; {
    bestPassBacktestReportPath,                                        // html_file
    setFileStepsID,                                                           // step_id
    "Best Pass Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    bestPassSetFilePath,                                                   // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
	"", // config
	"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx",  // perf_criteria
	optimization_pass_id //optimization_pass_id
}*/
new List&lt;object&gt; {
    bestPassBacktestReportPath,                              // html_file
    setFileStepsID,                                          // step_id
    "Best Pass Backtest Report",                             // metric_type
    ea,                                                      // EA_name
    bestPassSetFilePath,                                     // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),    // output_set_file_path
    settingsDict["DBPath"],                                  // db_path
    "_summary_metrics.csv",                                  // summary_metrics_path (keep as is, unless you want to parameterize)
    "",                                                      // config (parameterize if needed; otherwise leave blank)
    settingsDict["ConfigPath"],                              // perf_criteria
    optimization_pass_id                                     // optimization_pass_id
}</CSharpValue>
                                            </InArgument>
                                          </p:InvokeMethod.Parameters>
                                          <p:InvokeMethod.Result>
                                            <OutArgument x:TypeArguments="p:PythonObject">
                                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">pyResult</CSharpReference>
                                            </OutArgument>
                                          </p:InvokeMethod.Result>
                                        </p:InvokeMethod>
                                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="449.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_2">
                                          <p:GetObject.PythonObject>
                                            <InArgument x:TypeArguments="p:PythonObject">
                                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">pyResult</CSharpValue>
                                            </InArgument>
                                          </p:GetObject.PythonObject>
                                          <p:GetObject.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">jsonString</CSharpReference>
                                            </OutArgument>
                                          </p:GetObject.Result>
                                        </p:GetObject>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="449.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">jsonString</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                        </ui:LogMessage>
                                      </Sequence>
                                      <Sequence DisplayName="Create Best Pass Backtest Complete Steps" sap:VirtualizedContainerService.HintSize="501.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="467.55555555555554,228" sap2010:WorkflowViewState.IdRef="LoadScript_3">
                                          <p:LoadScript.Result>
                                            <OutArgument x:TypeArguments="p:PythonObject">
                                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">pyScriptObject</CSharpReference>
                                            </OutArgument>
                                          </p:LoadScript.Result>
                                          <p:LoadScript.ScriptFile>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_425">settingsDict["PythonScriptPath2"]</CSharpValue>
                                            </InArgument>
                                          </p:LoadScript.ScriptFile>
                                        </p:LoadScript>
                                        <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_28">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Object[]">
                                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">paramsList</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Object[]">
                                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161" xml:space="preserve">new object[] {
    setFileID,                                  // job_id
    2,                                          // step_number
    "Best Pass Backtest Completed", // step_name
    bestPassSetFilePath,                     // file_path
    "Best Pass set file " + bestPassSetFilePath + " at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                     // version
    "",                                         // meta_json (e.g., "{}" or your JSON string)
    "Completed"                                 // status
}</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_1">
                                          <uwaj:SerializeJson.InputObject>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">paramsList</CSharpValue>
                                            </InArgument>
                                          </uwaj:SerializeJson.InputObject>
                                          <uwaj:SerializeJson.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">paramsJson</CSharpReference>
                                            </OutArgument>
                                          </uwaj:SerializeJson.Result>
                                        </uwaj:SerializeJson>
                                        <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="467.55555555555554,373.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_29">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Object[]">
                                                <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">logList</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Object[]">
                                                <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">paramsList.ToArray()</CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
                                            <ui:LogMessage.Message>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">"Create Best Pass Backtest Complete Steps - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                              </InArgument>
                                            </ui:LogMessage.Message>
                                          </ui:LogMessage>
                                        </Sequence>
                                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" Name="run_sqlite_query">
                                          <p:InvokeMethod.Instance>
                                            <InArgument x:TypeArguments="p:PythonObject">
                                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">pyScriptObject</CSharpValue>
                                            </InArgument>
                                          </p:InvokeMethod.Instance>
                                          <p:InvokeMethod.Parameters>
                                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_426" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                                            </InArgument>
                                          </p:InvokeMethod.Parameters>
                                          <p:InvokeMethod.Result>
                                            <OutArgument x:TypeArguments="p:PythonObject">
                                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">pyResult</CSharpReference>
                                            </OutArgument>
                                          </p:InvokeMethod.Result>
                                        </p:InvokeMethod>
                                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_3">
                                          <p:GetObject.PythonObject>
                                            <InArgument x:TypeArguments="p:PythonObject">
                                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">pyResult</CSharpValue>
                                            </InArgument>
                                          </p:GetObject.PythonObject>
                                          <p:GetObject.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">jsonString</CSharpReference>
                                            </OutArgument>
                                          </p:GetObject.Result>
                                        </p:GetObject>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="467.55555555555554,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">jsonString</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                        </ui:LogMessage>
                                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2">
                                          <ui:DeserializeJson.JsonObject>
                                            <OutArgument x:TypeArguments="njl:JObject">
                                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">jsonObj</CSharpReference>
                                            </OutArgument>
                                          </ui:DeserializeJson.JsonObject>
                                          <ui:DeserializeJson.JsonString>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">jsonString</CSharpValue>
                                            </InArgument>
                                          </ui:DeserializeJson.JsonString>
                                        </ui:DeserializeJson>
                                        <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,48" sap2010:WorkflowViewState.IdRef="Assign_30">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">setFileStepsID</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">jsonObj["lastrowid"].ToString()</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </Sequence>
                                      <Sequence DisplayName="create Optimzation set_file_artifacts" sap:VirtualizedContainerService.HintSize="501.3333333333333,1581.7777777777778" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="467.55555555555554,228" sap2010:WorkflowViewState.IdRef="LoadScript_11">
                                          <p:LoadScript.Result>
                                            <OutArgument x:TypeArguments="p:PythonObject">
                                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">pyScriptObject</CSharpReference>
                                            </OutArgument>
                                          </p:LoadScript.Result>
                                          <p:LoadScript.ScriptFile>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_427">settingsDict["PythonScriptPath2"]</CSharpValue>
                                            </InArgument>
                                          </p:LoadScript.ScriptFile>
                                        </p:LoadScript>
                                        <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_31">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Object[]">
                                              <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">paramsList</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Object[]">
                                              <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">new object[] { setFileStepsID, "Best Pass set_file", bestPassSetFilePath, "" }</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_7">
                                          <uwaj:SerializeJson.InputObject>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">paramsList</CSharpValue>
                                            </InArgument>
                                          </uwaj:SerializeJson.InputObject>
                                          <uwaj:SerializeJson.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">paramsJson</CSharpReference>
                                            </OutArgument>
                                          </uwaj:SerializeJson.Result>
                                        </uwaj:SerializeJson>
                                        <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="467.55555555555554,373.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_32">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Object[]">
                                                <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">logList</CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Object[]">
                                                <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">paramsList.ToArray()</CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info">
                                            <ui:LogMessage.Message>
                                              <InArgument x:TypeArguments="x:Object">
                                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">"create Optimzation set_file_artifacts - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                              </InArgument>
                                            </ui:LogMessage.Message>
                                          </ui:LogMessage>
                                        </Sequence>
                                        <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" Name="run_sqlite_query">
                                          <p:InvokeMethod.Instance>
                                            <InArgument x:TypeArguments="p:PythonObject">
                                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">pyScriptObject</CSharpValue>
                                            </InArgument>
                                          </p:InvokeMethod.Instance>
                                          <p:InvokeMethod.Parameters>
                                            <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                                            </InArgument>
                                          </p:InvokeMethod.Parameters>
                                          <p:InvokeMethod.Result>
                                            <OutArgument x:TypeArguments="p:PythonObject">
                                              <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">pyResult</CSharpReference>
                                            </OutArgument>
                                          </p:InvokeMethod.Result>
                                        </p:InvokeMethod>
                                        <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_11">
                                          <p:GetObject.PythonObject>
                                            <InArgument x:TypeArguments="p:PythonObject">
                                              <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">pyResult</CSharpValue>
                                            </InArgument>
                                          </p:GetObject.PythonObject>
                                          <p:GetObject.Result>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">jsonString</CSharpReference>
                                            </OutArgument>
                                          </p:GetObject.Result>
                                        </p:GetObject>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="467.55555555555554,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">jsonString</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                        </ui:LogMessage>
                                        <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_10">
                                          <ui:DeserializeJson.JsonObject>
                                            <OutArgument x:TypeArguments="njl:JObject">
                                              <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">jsonObj</CSharpReference>
                                            </OutArgument>
                                          </ui:DeserializeJson.JsonObject>
                                          <ui:DeserializeJson.JsonString>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">jsonString</CSharpValue>
                                            </InArgument>
                                          </ui:DeserializeJson.JsonString>
                                        </ui:DeserializeJson>
                                        <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_33">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">setFileArtifactsID</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">jsonObj["lastrowid"].ToString()</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="501.3333333333333,48" sap2010:WorkflowViewState.IdRef="Assign_41">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_95">currentIndex</CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">currentIndex + 1</CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <ui:ForEach.Values>
                                  <InArgument x:TypeArguments="sc:IEnumerable">
                                    <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">jsonObj["top_n_passes"]</CSharpValue>
                                  </InArgument>
                                </ui:ForEach.Values>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                            </Sequence>
                            <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="449.77777777777777,195.11111111111111" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True">
                              <ui:MoveFile.Destination>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202" xml:space="preserve">/*Path.Combine("C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\01_user_inputs\\Processed", Path.GetFileName(CurrentFile.ToString()))*/
Path.Combine(settingsDict["ProcessedFolder"], Path.GetFileName(CurrentFile.ToString()))</CSharpValue>
                                </InArgument>
                              </ui:MoveFile.Destination>
                              <ui:MoveFile.Path>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">CurrentFile.ToString()</CSharpValue>
                                </InArgument>
                              </ui:MoveFile.Path>
                            </ui:MoveFile>
                            <Sequence DisplayName="Update set_file_steps Status" sap:VirtualizedContainerService.HintSize="449.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_55">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="503.1111111111111,228" sap2010:WorkflowViewState.IdRef="LoadScript_12">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="503.1111111111111,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_42">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_97">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208" xml:space="preserve">new object[] { 
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),       // Updated at
	setFileID
}</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_8">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211" xml:space="preserve">new string[] {settingsDict["DBPath"],
	"UPDATE set_file_steps SET status = 'Completed', updated_at = ? WHERE job_id = ?;", 
	paramsJson}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_17">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="GetObject`1_12">
                                      <p:GetObject.PythonObject>
                                        <InArgument x:TypeArguments="p:PythonObject">
                                          <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">pyResult</CSharpValue>
                                        </InArgument>
                                      </p:GetObject.PythonObject>
                                      <p:GetObject.Result>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">jsonString</CSharpReference>
                                        </OutArgument>
                                      </p:GetObject.Result>
                                    </p:GetObject>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,337.3333333333333" sap2010:WorkflowViewState.IdRef="CommentOut_16">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,226.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">jsonString</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_11">
                                      <ui:DeserializeJson.JsonObject>
                                        <OutArgument x:TypeArguments="njl:JObject">
                                          <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">jsonObj</CSharpReference>
                                        </OutArgument>
                                      </ui:DeserializeJson.JsonObject>
                                      <ui:DeserializeJson.JsonString>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_214">jsonString</CSharpValue>
                                        </InArgument>
                                      </ui:DeserializeJson.JsonString>
                                    </ui:DeserializeJson>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,276.44444444444446" sap2010:WorkflowViewState.IdRef="CommentOut_13">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_43">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">setFileID</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">jsonObj["lastrowid"].ToString()</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,48" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_5">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">setFileID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                            <Sequence DisplayName="Update set_file_jobs Status" sap:VirtualizedContainerService.HintSize="449.77777777777777,48" sap2010:WorkflowViewState.IdRef="Sequence_58">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="503.1111111111111,228" sap2010:WorkflowViewState.IdRef="LoadScript_13">
                                <p:LoadScript.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">pyScriptObject</CSharpReference>
                                  </OutArgument>
                                </p:LoadScript.Result>
                                <p:LoadScript.ScriptFile>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">settingsDict["PythonScriptPath2"]</CSharpValue>
                                  </InArgument>
                                </p:LoadScript.ScriptFile>
                              </p:LoadScript>
                              <Assign sap:VirtualizedContainerService.HintSize="503.1111111111111,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_44">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Object[]">
                                    <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">paramsList</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Object[]">
                                    <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218" xml:space="preserve">new object[] { 
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),       // Updated at
	setFileID
}</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_9">
                                <uwaj:SerializeJson.InputObject>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">paramsList</CSharpValue>
                                  </InArgument>
                                </uwaj:SerializeJson.InputObject>
                                <uwaj:SerializeJson.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">paramsJson</CSharpReference>
                                  </OutArgument>
                                </uwaj:SerializeJson.Result>
                              </uwaj:SerializeJson>
                              <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" Name="run_sqlite_query">
                                <p:InvokeMethod.Instance>
                                  <InArgument x:TypeArguments="p:PythonObject">
                                    <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_220">pyScriptObject</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Instance>
                                <p:InvokeMethod.Parameters>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221" xml:space="preserve">new string[] {settingsDict["DBPath"],
	"UPDATE set_file_jobs SET status = 'Completed', updated_at = ? WHERE id = ?;",
	paramsJson}</CSharpValue>
                                  </InArgument>
                                </p:InvokeMethod.Parameters>
                                <p:InvokeMethod.Result>
                                  <OutArgument x:TypeArguments="p:PythonObject">
                                    <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">pyResult</CSharpReference>
                                  </OutArgument>
                                </p:InvokeMethod.Result>
                              </p:InvokeMethod>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_18">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="GetObject`1_13">
                                      <p:GetObject.PythonObject>
                                        <InArgument x:TypeArguments="p:PythonObject">
                                          <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">pyResult</CSharpValue>
                                        </InArgument>
                                      </p:GetObject.PythonObject>
                                      <p:GetObject.Result>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">jsonString</CSharpReference>
                                        </OutArgument>
                                      </p:GetObject.Result>
                                    </p:GetObject>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,337.3333333333333" sap2010:WorkflowViewState.IdRef="CommentOut_19">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,226.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_223">jsonString</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_20">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_12">
                                      <ui:DeserializeJson.JsonObject>
                                        <OutArgument x:TypeArguments="njl:JObject">
                                          <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">jsonObj</CSharpReference>
                                        </OutArgument>
                                      </ui:DeserializeJson.JsonObject>
                                      <ui:DeserializeJson.JsonString>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">jsonString</CSharpValue>
                                        </InArgument>
                                      </ui:DeserializeJson.JsonString>
                                    </ui:DeserializeJson>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,276.44444444444446" sap2010:WorkflowViewState.IdRef="CommentOut_21">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_45">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">setFileID</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">jsonObj["lastrowid"].ToString()</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,48" sap2010:WorkflowViewState.IdRef="CommentOut_22">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_6">
                                      <ui:MessageBox.Text>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_226">setFileID</CSharpValue>
                                        </InArgument>
                                      </ui:MessageBox.Text>
                                    </ui:MessageBox>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </p:PythonScope.Body>
                      <p:PythonScope.LibraryPath>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">settingsDict["PythonDllPath"]</CSharpValue>
                        </InArgument>
                      </p:PythonScope.LibraryPath>
                      <p:PythonScope.Path>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">settingsDict["PythonHome"]</CSharpValue>
                        </InArgument>
                      </p:PythonScope.Path>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:PythonScope.WorkingFolder>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">settingsDict["PythonWorkingFolder"]</CSharpValue>
                        </InArgument>
                      </p:PythonScope.WorkingFolder>
                    </p:PythonScope>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFileX.Body>
              <ui:ForEachFileX.Folder>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">settingsDict["InputFolderPath"]</CSharpValue>
                </InArgument>
              </ui:ForEachFileX.Folder>
            </ui:ForEachFileX>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <Assign sap:VirtualizedContainerService.HintSize="522,115.5" sap2010:WorkflowViewState.IdRef="Assign_87">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_211">CurrentFile</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_410">in_InputSetFilePath</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="522,115.5" sap2010:WorkflowViewState.IdRef="Assign_92">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_214">out_Status</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">In Progress</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="522,117" sap2010:WorkflowViewState.IdRef="Assign_100">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
            <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_223">settingsDict</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
            <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_424" xml:space="preserve">dtSettings.AsEnumerable()
    .Where(r =&gt; !string.IsNullOrWhiteSpace(r["Name"].ToString()))
    .ToDictionary(
        r =&gt; r["Name"].ToString().Trim(),
        r =&gt; r["Value"].ToString().Trim()
    )</CSharpValue>
          </InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="522,3230" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Sequence DisplayName="Process Set File" sap:VirtualizedContainerService.HintSize="520,2642.5" sap2010:WorkflowViewState.IdRef="Sequence_67">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" sap:VirtualizedContainerService.HintSize="486,120" sap2010:WorkflowViewState.IdRef="StartProcess_2">
              <ui:StartProcess.FileName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_227">settingsDict["MT4Path"]</CSharpValue>
                </InArgument>
              </ui:StartProcess.FileName>
            </ui:StartProcess>
            <uix:NCheckState DisplayName="Check App State 'Navigator'" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="486,57" sap2010:WorkflowViewState.IdRef="NCheckState_3" Version="V5">
              <uix:NCheckState.IfExists>
                <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="450,92" sap2010:WorkflowViewState.IdRef="Sequence_69">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </uix:NCheckState.IfExists>
              <uix:NCheckState.IfNotExists>
                <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="526,438" sap2010:WorkflowViewState.IdRef="Sequence_71">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="492,376" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="5">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="450,174" sap2010:WorkflowViewState.IdRef="Sequence_70">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Delay Duration="00:00:30" sap:VirtualizedContainerService.HintSize="416,114" sap2010:WorkflowViewState.IdRef="Delay_2" />
                        </Sequence>
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                </Sequence>
              </uix:NCheckState.IfNotExists>
              <uix:NCheckState.Target>
                <uix:TargetAnchorable ContentHash="cjBCeNqZOE6_7tJQTdhESA" DesignTimeRectangle="11, 473, 276, 321" FullSelectorArgument="&lt;wnd cls='Afx:*' title='Navigator' /&gt;&lt;ctrl name='Navigator' role='client' /&gt;" Guid="76f776f0-f813-4952-a93f-0044b65eb144" InformativeScreenshot="7ebd6f8b7260cada5d39c6ad6dbcfd1e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/kB1PgRstqk68u8jzZALSIA" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' title='892422018: VantageInternational-Demo - Demo Account - Vantage In*' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="Interactive" />
              </uix:NCheckState.Target>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </uix:NCheckState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,57" sap2010:WorkflowViewState.IdRef="CommentOut_24">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1124,1394" sap2010:WorkflowViewState.IdRef="Sequence_76">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uix:NCheckState DisplayName="Check App State 'Alpari MT4'" HealingAgentBehavior="Disabled" sap:VirtualizedContainerService.HintSize="1090,1334" sap2010:WorkflowViewState.IdRef="NCheckState_4" Version="V5">
                    <uix:NCheckState.IfExists>
                      <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="518,638" sap2010:WorkflowViewState.IdRef="Sequence_73">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uix:NApplicationCard AttachMode="ByInstance" DisplayName="MT4" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="484,576" sap2010:WorkflowViewState.IdRef="NApplicationCard_3" ScopeGuid="fa1c9beb-5296-400a-aeaf-0f40a1bacbb3" Version="V2">
                          <uix:NApplicationCard.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,282" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click ''Login''" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,220" sap2010:WorkflowViewState.IdRef="NClick_6" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="fa1c9beb-5296-400a-aeaf-0f40a1bacbb3" Version="V5">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable CVScreenId="7b365c50-a1f9-4752-9b80-be30f5a06ad3" ContentHash="-fVYDhP8E0mPg1TbAtITsA" CvElementArea="236, 401, 168, 46" CvTextArea="293, 412, 52, 26" CvTextArgument="Login" CvType="Button" DesignTimeRectangle="238, 402, 165, 44" DesignTimeScaleFactor="2" ElementType="Button" FullSelectorArgument="&lt;wnd ctrlid='1' title='Login' /&gt;" FuzzySelectorArgument="&lt;wnd ctrlid='1' title='Login' matching:ctrlid='fuzzy' fuzzylevel:ctrlid='0.0' matching:title='fuzzy' fuzzylevel:title='0.0' check:text='Login' /&gt;" Guid="e65caa6e-d7c0-420b-83ea-b951f93bd8e4" InformativeScreenshot="0c87ff1ae47cefb666cf3d47dcae2c57.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/VhGNbjqqzU--HQuI1VpyiQ" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32770' title='Alpari MT4' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                      <uix:TargetAnchorable.PointOffset>
                                        <uix:PointOffset />
                                      </uix:TargetAnchorable.PointOffset>
                                    </uix:TargetAnchorable>
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                </uix:NClick>
                              </Sequence>
                            </ActivityAction>
                          </uix:NApplicationCard.Body>
                          <uix:NApplicationCard.TargetApp>
                            <uix:TargetApp Area="0, 0, 4122, 2090" ContentHash="ARtLa8TyAkCZONOgi9tN9g" FilePath="C:\\Program Files (x86)\\Vantage International MT4\\terminal.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAXaSURBVHhe7ZhpbBRlGMenyGFLQYho8OAwJrRdKaAih3Iopbs72+3O7OzOTGEpqAltkS9QPBIlMaImGsSIEMPxSYJREaMx+oFoIhHl8AgxKOWIUtrKUe7IUc6/eZ7tu26nG9HuzNYwM8kvM3n23eP5vc/7zjMr3RSMw81I1oDb8ARYA27DE2ANuA1PgDXgNjwB1oDb8ARYA27DE2ANuA1PgDXgNjwB1kBX6SXr6BXKgKyjp6zzmJ40zias399VbBHQIxCDVKZAmhaBNM1yLlOQ59d4nBTUIQWMJHSdBT0y/I6ukLUASr53yMCQRA2GV9dh2KxaDK+uxbBqOtdxvDAyEz3lOPrLGoaFFAwNKbgrpODuLjAkpODOkILewZgtErISQKUtTVdxu/EEPtj8LVqOn0Bz63E0tR5jDp04iT1NLahZvgoFYQOTQn68GxuHrfoo/GSMxPd6KXbopXy+HmLcD3op3tHGY5Ac5UqgZWX9Xf+F7AS0V0CfCgNzlr6NP89fQKZjW8Ne3DtnHm4uVzA2XIE3oxOx2/DhRNUI5qhZhNbrQGNOVo3AHsOHeGR6qgK6VQCRXgUfb9mGK1ev4tq1a3wm6Dh7oQ0vrvsQ+ZEEJH8MA0IaKir92Bh7EHsNH/4wi9FkFqPRLMFBszgj9Dqd12jjbJt9InsB7VVAIuIvL8XRU6c5aZKQfv61sRmjaxdCKo8ij+4MwTjvBYvUKdiul6LZLMYhs4jPVij5w2YRdhojWRx/Z4bf0hWyFkBwFZRHuQrWfbk5NfOUuhBwru0iXlq/Af3VRPKuQO8J6ugra5gYlrFaG49dxn0Zk2/h2S/B8ugEW2efsEWAQPJrmLpoMZqPHeekr1qqoKGpBY8seD5ZMe3Vk9fObbKKGZEybNFHc8LpAo6YRbwBTgjLPNb6vdlgmwBRBQO12Vj1+SZcunw5lbwQQDF6jcbQWHqPEEGzeousYbE6CfvN5L5Aa57OB8wSvBZ9GANsnn3CNgECml2aZZrt9NkX1UDVQVVC1SLeIyqBlsMCdQr2GT7eD0jAIbMYX+uj8VBFyLZ1n46tArgK/Br6qQle7+fbLv5dBXwF3h9on6D9Ir0KaGb7yRqebhdAM0/sN3y8URbKGkuyc/YJWwUQYimMql2IXQcOdqgCcaY7Bd0xaKzYD0gAJUnJpgv4Kj4GJRVh20tf4IgA2uX7Vs7As2vXpZojkTxfA/jkux0YbD7JsuiBSQrGUwKoN6DGp8HwYZ7yKAqCMUdmn7BdAJFsjqK4p7oOW3fvSSWeLqL19BmYry5LPikGKMGOFUA7/6exB7j3d2r2CccE5PmpRTbx1Io1OH32XIfkxfHNrt388ESdZA/ZYAH16hT8ZpZwyzs7Mg19HJx9whEBhNgLhiTmYtOPOzskLkScOXce81euQX7Y5Ba5UI6lKuD92FjcEVIdnX3COQFpLbL+yhtc8unJi2N7wz6Uzl2QEvCcOhnb9FIoleX8OXY88PwTjgkgeHMrj/JmR5ueODq2yG1Ysn4D8pUECgIqnolOxQptAgbLzs8+4aiA9CqILVmKwydPJQV0elBqgq+mHn39ChJKGR4LBx1f+wJHBRCiORqkP47VX2zC5StXUskLAdQwLXnvIwxUE7g1EEGBHOv0OU7huAABSZhc/wL/U5SpChqPtPLrUsCev7r+LTkRIKpgQLQayzZ+hrZLlzpVATVMdctX8R0huWw6f44T5EQAkbwtahhTV89r3irgl8Ym3D9vEYvi5ijDZzhBbgX4NRQqM/lB6cLF5IMSHXRNMfr3+IYVQAgJ9KD08++NKQF0TTGqkFwmT+RcQF4ghvxwFeavXMs9AEHXFKPXbmgBBDdH01UMnVWD7Q17GbqmGL1mHe80OReQ2gsiMzHr9beY7lj7gpwLEFCy+ZVVTHckLug2AQStecIazyXdKoD6fKd7/evRrQL+D3gCrAG34QmwBtyGJ8AacBueAGvAbXgCrAG34QmwBtyGJ8AacBt/AZBDvJmSsyGMAAAAAElFTkSuQmCC" InformativeScreenshot="c49409ac1f4d443f7c5e3721b318a83e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/EYOcM0uOCU2G8d1ODrJiow" Selector="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' /&gt;" Version="V2" />
                          </uix:NApplicationCard.TargetApp>
                        </uix:NApplicationCard>
                      </Sequence>
                    </uix:NCheckState.IfExists>
                    <uix:NCheckState.IfNotExists>
                      <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="518,1092" sap2010:WorkflowViewState.IdRef="Sequence_75">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uix:NApplicationCard AttachMode="ByInstance" DisplayName="MT4" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="484,1030" sap2010:WorkflowViewState.IdRef="NApplicationCard_4" ScopeGuid="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V2">
                          <uix:NApplicationCard.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,736" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click ''File''" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,227" sap2010:WorkflowViewState.IdRef="NClick_7" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V5">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable CVScreenId="8eed95f1-9ece-4c95-bc68-025b057f3302" ContentHash="9taQFOxVuUC6DqJQ5hmzLQ" CvTextArea="27, 64, 40, 24" CvTextArgument="File" CvType="Text" DesignTimeRectangle="13, 58, 75, 38" DesignTimeScaleFactor="2" FullSelectorArgument="&lt;ctrl automationid='MenuBar' name='應用程式' role='menu bar' /&gt;&lt;ctrl name='File' role='menu item' /&gt;" FuzzySelectorArgument="&lt;ctrl automationid='MenuBar' name='應用程式' role='menu bar' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' matching:name='fuzzy' fuzzylevel:name='0.0' /&gt;&lt;ctrl name='File' role='menu item' automationid='' matching:name='fuzzy' fuzzylevel:name='0.0' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' check:text='File' /&gt;" Guid="69129ea5-a7b9-49f8-99a2-6005ae2371f0" InformativeScreenshot="925b6d6ebcb4ac08279a3d9c55a90c2c.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/O2I8Z7gqr0yqQGE64AWGjg" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' title='251818210: Alpari-Pro.ECN-Demo - Demo Account - Alpari' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                      <uix:TargetAnchorable.Anchors>
                                        <scg:List x:TypeArguments="uix:ITarget" Capacity="0" />
                                      </uix:TargetAnchorable.Anchors>
                                      <uix:TargetAnchorable.PointOffset>
                                        <uix:PointOffset />
                                      </uix:TargetAnchorable.PointOffset>
                                    </uix:TargetAnchorable>
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                </uix:NClick>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click ''Login to Trade Account''" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,227" sap2010:WorkflowViewState.IdRef="NClick_8" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V5">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable CVScreenId="8c6ea6a0-9314-412b-b66e-76be056c7071" ContentHash="oqTr06jyGEWv2PUiNIqFdA" CvTextArea="66, 290, 266, 30" CvTextArgument="Login to Trade Account" CvType="Text" DesignTimeRectangle="3, 283, 414, 41" DesignTimeScaleFactor="2" FullSelectorArgument="&lt;ctrl name='File' role='popup menu' /&gt;&lt;ctrl automationid='35429' /&gt;" FuzzySelectorArgument="&lt;ctrl name='File' role='popup menu' matching:name='fuzzy' fuzzylevel:name='0.0' /&gt;&lt;ctrl automationid='35429' role='menu item' matching:automationid='fuzzy' fuzzylevel:automationid='0.0' check:text='Login to Trade Account' /&gt;" Guid="49513924-90bb-49ea-94ab-89bd4c62d935" InformativeScreenshot="1445cd16ea9b33347fa91cf23a219f28.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/Gt_l1utDWUiIzv8wam6smQ" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32768' idx='*' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                      <uix:TargetAnchorable.PointOffset>
                                        <uix:PointOffset />
                                      </uix:TargetAnchorable.PointOffset>
                                    </uix:TargetAnchorable>
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                </uix:NClick>
                                <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Click 'Login'" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="416,220" sap2010:WorkflowViewState.IdRef="NClick_9" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="0ad3fde5-11ca-474b-a8d6-8087f72517a6" Version="V5">
                                  <uix:NClick.Target>
                                    <uix:TargetAnchorable CVScreenId="7b365c50-a1f9-4752-9b80-be30f5a06ad3" ContentHash="-fVYDhP8E0mPg1TbAtITsA" CvElementArea="236, 401, 168, 46" CvTextArea="293, 412, 52, 26" CvTextArgument="Login" CvType="Button" DesignTimeRectangle="238, 402, 165, 44" DesignTimeScaleFactor="2" ElementType="Button" FullSelectorArgument="&lt;wnd ctrlid='1' title='Login' /&gt;" FuzzySelectorArgument="&lt;wnd ctrlid='1' title='Login' matching:ctrlid='fuzzy' fuzzylevel:ctrlid='0.0' matching:title='fuzzy' fuzzylevel:title='0.0' check:text='Login' /&gt;" Guid="e65caa6e-d7c0-420b-83ea-b951f93bd8e4" InformativeScreenshot="0c87ff1ae47cefb666cf3d47dcae2c57.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/VhGNbjqqzU--HQuI1VpyiQ" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32770' title='Alpari MT4' /&gt;" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive">
                                      <uix:TargetAnchorable.Anchors>
                                        <scg:List x:TypeArguments="uix:ITarget" Capacity="0" />
                                      </uix:TargetAnchorable.Anchors>
                                      <uix:TargetAnchorable.PointOffset>
                                        <uix:PointOffset />
                                      </uix:TargetAnchorable.PointOffset>
                                    </uix:TargetAnchorable>
                                  </uix:NClick.Target>
                                  <uix:NClick.VerifyOptions>
                                    <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                                      <uix:VerifyExecutionOptions.Retry>
                                        <InArgument x:TypeArguments="x:Boolean" />
                                      </uix:VerifyExecutionOptions.Retry>
                                      <uix:VerifyExecutionOptions.Timeout>
                                        <InArgument x:TypeArguments="x:Double" />
                                      </uix:VerifyExecutionOptions.Timeout>
                                    </uix:VerifyExecutionOptions>
                                  </uix:NClick.VerifyOptions>
                                </uix:NClick>
                              </Sequence>
                            </ActivityAction>
                          </uix:NApplicationCard.Body>
                          <uix:NApplicationCard.TargetApp>
                            <uix:TargetApp Area="0, 0, 4122, 2090" ContentHash="ARtLa8TyAkCZONOgi9tN9g" FilePath="C:\\Program Files (x86)\\Vantage International MT4\\terminal.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAXaSURBVHhe7ZhpbBRlGMenyGFLQYho8OAwJrRdKaAih3Iopbs72+3O7OzOTGEpqAltkS9QPBIlMaImGsSIEMPxSYJREaMx+oFoIhHl8AgxKOWIUtrKUe7IUc6/eZ7tu26nG9HuzNYwM8kvM3n23eP5vc/7zjMr3RSMw81I1oDb8ARYA27DE2ANuA1PgDXgNjwB1oDb8ARYA27DE2ANuA1PgDXgNjwB1kBX6SXr6BXKgKyjp6zzmJ40zias399VbBHQIxCDVKZAmhaBNM1yLlOQ59d4nBTUIQWMJHSdBT0y/I6ukLUASr53yMCQRA2GV9dh2KxaDK+uxbBqOtdxvDAyEz3lOPrLGoaFFAwNKbgrpODuLjAkpODOkILewZgtErISQKUtTVdxu/EEPtj8LVqOn0Bz63E0tR5jDp04iT1NLahZvgoFYQOTQn68GxuHrfoo/GSMxPd6KXbopXy+HmLcD3op3tHGY5Ac5UqgZWX9Xf+F7AS0V0CfCgNzlr6NP89fQKZjW8Ne3DtnHm4uVzA2XIE3oxOx2/DhRNUI5qhZhNbrQGNOVo3AHsOHeGR6qgK6VQCRXgUfb9mGK1ev4tq1a3wm6Dh7oQ0vrvsQ+ZEEJH8MA0IaKir92Bh7EHsNH/4wi9FkFqPRLMFBszgj9Dqd12jjbJt9InsB7VVAIuIvL8XRU6c5aZKQfv61sRmjaxdCKo8ij+4MwTjvBYvUKdiul6LZLMYhs4jPVij5w2YRdhojWRx/Z4bf0hWyFkBwFZRHuQrWfbk5NfOUuhBwru0iXlq/Af3VRPKuQO8J6ugra5gYlrFaG49dxn0Zk2/h2S/B8ugEW2efsEWAQPJrmLpoMZqPHeekr1qqoKGpBY8seD5ZMe3Vk9fObbKKGZEybNFHc8LpAo6YRbwBTgjLPNb6vdlgmwBRBQO12Vj1+SZcunw5lbwQQDF6jcbQWHqPEEGzeousYbE6CfvN5L5Aa57OB8wSvBZ9GANsnn3CNgECml2aZZrt9NkX1UDVQVVC1SLeIyqBlsMCdQr2GT7eD0jAIbMYX+uj8VBFyLZ1n46tArgK/Br6qQle7+fbLv5dBXwF3h9on6D9Ir0KaGb7yRqebhdAM0/sN3y8URbKGkuyc/YJWwUQYimMql2IXQcOdqgCcaY7Bd0xaKzYD0gAJUnJpgv4Kj4GJRVh20tf4IgA2uX7Vs7As2vXpZojkTxfA/jkux0YbD7JsuiBSQrGUwKoN6DGp8HwYZ7yKAqCMUdmn7BdAJFsjqK4p7oOW3fvSSWeLqL19BmYry5LPikGKMGOFUA7/6exB7j3d2r2CccE5PmpRTbx1Io1OH32XIfkxfHNrt388ESdZA/ZYAH16hT8ZpZwyzs7Mg19HJx9whEBhNgLhiTmYtOPOzskLkScOXce81euQX7Y5Ba5UI6lKuD92FjcEVIdnX3COQFpLbL+yhtc8unJi2N7wz6Uzl2QEvCcOhnb9FIoleX8OXY88PwTjgkgeHMrj/JmR5ueODq2yG1Ysn4D8pUECgIqnolOxQptAgbLzs8+4aiA9CqILVmKwydPJQV0elBqgq+mHn39ChJKGR4LBx1f+wJHBRCiORqkP47VX2zC5StXUskLAdQwLXnvIwxUE7g1EEGBHOv0OU7huAABSZhc/wL/U5SpChqPtPLrUsCev7r+LTkRIKpgQLQayzZ+hrZLlzpVATVMdctX8R0huWw6f44T5EQAkbwtahhTV89r3irgl8Ym3D9vEYvi5ijDZzhBbgX4NRQqM/lB6cLF5IMSHXRNMfr3+IYVQAgJ9KD08++NKQF0TTGqkFwmT+RcQF4ghvxwFeavXMs9AEHXFKPXbmgBBDdH01UMnVWD7Q17GbqmGL1mHe80OReQ2gsiMzHr9beY7lj7gpwLEFCy+ZVVTHckLug2AQStecIazyXdKoD6fKd7/evRrQL+D3gCrAG34QmwBtyGJ8AacBueAGvAbXgCrAG34QmwBtyGJ8AacBt/AZBDvJmSsyGMAAAAAElFTkSuQmCC" InformativeScreenshot="c49409ac1f4d443f7c5e3721b318a83e.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/EYOcM0uOCU2G8d1ODrJiow" Selector="&lt;wnd app='terminal.exe' cls='MetaQuotes::MetaTrader*' /&gt;" Version="V2" />
                          </uix:NApplicationCard.TargetApp>
                        </uix:NApplicationCard>
                      </Sequence>
                    </uix:NCheckState.IfNotExists>
                    <uix:NCheckState.Target>
                      <uix:TargetAnchorable ContentHash="Y3YseeS6nkO3bvtneB1ZbQ" DesignTimeRectangle="0, 0, 821, 477" Guid="c98896aa-f620-4d35-b871-6721bb0152ae" InformativeScreenshot="ad51ac0426e8a4efdab0bb03567d3249.png" Reference="EoK9QnnZwUOAEw3B5dGgtA/CGY0k_Z9DkaFBy51uHvp-Q" ScopeSelectorArgument="&lt;wnd app='terminal.exe' cls='#32770' title='Alpari MT4' /&gt;" SearchSteps="Selector" Version="V6" Visibility="Interactive" WaitForReadyArgument="Interactive" />
                    </uix:NCheckState.Target>
                  </uix:NCheckState>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <Sequence DisplayName="Prepare Setting Dict Sequence" sap:VirtualizedContainerService.HintSize="486,57" sap2010:WorkflowViewState.IdRef="Sequence_79">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="470,117" sap2010:WorkflowViewState.IdRef="Assign_46">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                    <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">settingsDict</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                    <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228" xml:space="preserve">dtSettings.AsEnumerable()
    .Where(r =&gt; !string.IsNullOrWhiteSpace(r["Name"].ToString()))
    .ToDictionary(
        r =&gt; r["Name"].ToString().Trim(),
        r =&gt; r["Value"].ToString().Trim()
    )</CSharpValue>
                  </InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <If sap:VirtualizedContainerService.HintSize="470,503" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">!string.IsNullOrWhiteSpace(settingsDict["BacktestPeriodinYear"])</CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,282" sap2010:WorkflowViewState.IdRef="Sequence_77">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_47">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">settingsDict["DateTo"]</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">DateTime.Now.ToString("dd.yyyy.MM")</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="434,106.5" sap2010:WorkflowViewState.IdRef="Assign_48">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_112">settingsDict["DateFrom"]</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">DateTime.Now.AddYears(-int.Parse(settingsDict["BacktestPeriodinYear"])).ToString("dd.yyyy.MM")</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90.5" sap2010:WorkflowViewState.IdRef="Sequence_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <p:PythonScope OperationTimeout="{x:Null}" DisplayName="Python Scope" sap:VirtualizedContainerService.HintSize="486,2185" sap2010:WorkflowViewState.IdRef="PythonScope_2">
              <p:PythonScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="PythonEngineSessionProperty" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="484,1949.5" sap2010:WorkflowViewState.IdRef="Sequence_119">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="messageString" />
                      <Variable x:TypeArguments="x:String" Name="EAFile" />
                      <Variable x:TypeArguments="s:Object[]" Name="logList" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Extract Set File Info" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_83">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_14">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_113">pyObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">settingsDict["PythonScriptPath1"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" Name="extract_fields_from_csv">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">pyObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237" xml:space="preserve">/*new List&lt;Object&gt; {CurrentFile.ToString(), "C:\\Users\\Philip\\Documents\\GitHub\\mt4_optimizer\\SymbolList.csv"}*/
new List&lt;Object&gt; {CurrentFile.ToString(), settingsDict["SymbolListPath"]}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_114">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_14">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">jsonString</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_13">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_49">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">ea</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_241">jsonObj["EA"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="433.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="503.1111111111111,446.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_82">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap:VirtualizedContainerService.HintSize="469.3333333333333,386.22222222222223" sap2010:WorkflowViewState.IdRef="If_6">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_243">CurrentRow["Code"].ToString().Trim().ToUpper() == ea.Trim().ToUpper()</CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_50">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_118">EAFile</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">CurrentRow["EAFile"].ToString()</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.55555555555554,90.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <ui:ForEachRow.DataTable>
                          <InArgument x:TypeArguments="sd:DataTable">
                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_242">dtEAMap</CSharpValue>
                          </InArgument>
                        </ui:ForEachRow.DataTable>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Assign_51">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">symbol</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">jsonObj["Symbol"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="Assign_52">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">timeframe</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">jsonObj["Timeframe"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="create set_file_jobs" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_85">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_15">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_247">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_53">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_248" xml:space="preserve">//new object[] { "Philip", CurrentFile.ToString(), symbol, timeframe, EAFile, "v1", 0, "pending", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") }
new object[] { 
    settingsDict["UserId"],                            // User ID, from config
    CurrentFile.ToString(),                            // File path
    symbol,                                            // Symbol (variable)
    timeframe,                                         // Timeframe (variable)
    EAFile,                                            // EA file (variable)
    settingsDict["SetVersion"],                        // Set version, from config (add if you want to control via config)
    0,                                                 // Current step (likely always 0 here)
    "Pending",                                         // Status (parameterize if desired)
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),      // Created at
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")       // Updated at
}</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_10">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_249">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251" xml:space="preserve">/*new string[] {"C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
	"INSERT INTO set_file_jobs (user_id, original_file, symbol, timeframe, ea, set_version, current_step, status, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 
	paramsJson}*/

new string[] {settingsDict["DBPath"],
	"INSERT INTO set_file_jobs (user_id, original_file, symbol, timeframe, ea, set_version, current_step, status, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", 
	paramsJson}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_124">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_15">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_125">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_253">jsonString</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_14">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_126">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_254">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_54">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_127">setFileID</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_255">jsonObj["lastrowid"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="CommentOut_25">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_84">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_7">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_256">setFileID</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                            </ui:MessageBox>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                    <Sequence DisplayName="create set_file_steps" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_87">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="433.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_16">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_128">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_257">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_55">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_129">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_258" xml:space="preserve">/*new object[] {
    setFileID,                                         // job_id
    0,                                                 // step_number
    "User Input",                                      // step_name
    CurrentFile.ToString(),                            // file_path
    "User initial input at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                            // version
    "{}",                                              // meta_json
    "initiated"                                        // status
}*/
new object[] {
    setFileID,                                         // job_id
    0,                                                 // step_number
    "User Input",                                      // step_name
    CurrentFile.ToString(),                            // file_path
    "User initial input at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    settingsDict["SetStepVersion"],                                            // version
    "{}",                                              // meta_json
    "Initiated"                                        // status
}</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_11">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_259">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_130">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_18" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_260">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_131">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_16">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_262">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_132">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">jsonString</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_15">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_133">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_264">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_56">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_134">setFileStepsID</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_265">jsonObj["lastrowid"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="CommentOut_26">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_86">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_8">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_266">setFileStepsID</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                            </ui:MessageBox>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                    <Sequence DisplayName="create set_file_artifacts" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_127">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="434,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_17">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_135">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_267">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_57">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_136">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">new object[] { setFileStepsID, "set_file", CurrentFile.ToString(), "" }</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="SerializeJson_12">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_269">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_137">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_19" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_138">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_17">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_272">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_139">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,176" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">jsonString</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_16">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_140">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_274">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_58">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_141">setFileArtifactsID</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_275">jsonObj["lastrowid"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.77777777777777,48" sap2010:WorkflowViewState.IdRef="CommentOut_27">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_88">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_9">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">setFileArtifactsID</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                            </ui:MessageBox>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                    <Sequence DisplayName="Assign Backtest Variable" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_90">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_59">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_142">settingsDict["SettingsFilePath"]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_277">Path.Combine(settingsDict["SettingsFilePath"], Path.GetFileName(CurrentFile.ToString()))</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_60">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_143">settingsDict["BacktestReportPath"]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_278">Path.Combine(settingsDict["BacktestReportPath"], Path.GetFileNameWithoutExtension(CurrentFile.ToString()) + "-backtest_report.htm")</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MT4backtest - Invoke Workflow File (MT4backtest.xaml)" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="MT4backtest.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dtSymbol">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_279">dtSymbol</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="CloseMT4">
                          <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_280">NAppCloseMode.Never</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InitialDeposit">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_281">settingsDict["InitialDeposit"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="OptimizedParameter">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_282">settingsDict["OptimizedParameter"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="OptimizationReportPath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_283">settingsDict["OptimizationPath"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="BacktestReportPath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">settingsDict["BacktestReportPath"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SettingsFilePath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_285">settingsDict["SettingsFilePath"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="DateTo">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_286">settingsDict["DateTo"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="DateFrom">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_287">settingsDict["DateFrom"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Spread">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_288">settingsDict["Spread"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Period">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_289">timeframe</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="btSymbol">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_290">symbol</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mode">Backtest</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TargetEA">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_291">EAFile</CSharpValue>
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <Sequence DisplayName="Extract MT4 Report to DB" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_91">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="434,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_18">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_144">pyObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_292">settingsDict["PythonScriptPath3"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,176" sap2010:WorkflowViewState.IdRef="LogMessage_25">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_293" xml:space="preserve">"BacktestReportPath: " + settingsDict["BacktestReportPath"] + Environment.NewLine +
"setFileStepsID: " + setFileStepsID + Environment.NewLine +
"Type: MT4 Backtest Report" + Environment.NewLine +
"EA: " + ea + Environment.NewLine +
"CurrentFile: " + CurrentFile + Environment.NewLine +
"OutputFolder: " + System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"].ToString()) + Environment.NewLine +
"DB Path: C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db" + Environment.NewLine +
"Summary Metrics: _summary_metrics.csv" + Environment.NewLine +
"Config: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" + Environment.NewLine +
"Perf Criteria: C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_20" Name="process_mt4_report">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_294">pyObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_295" xml:space="preserve">//new List&lt;object&gt; { settingsDict["BacktestReportPath"], setFileStepsID,  "MT4 Backtest Report", ea,  CurrentFile.ToString(), System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", "_summary_metrics.csv" }
/*new List&lt;object&gt; {
    settingsDict["BacktestReportPath"],                                        // html_file
    setFileStepsID,                                                           // step_id
    "MT4 Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    CurrentFile.ToString(),                                                   // input_set_file
    System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}*/
new List&lt;object&gt; {
    settingsDict["BacktestReportPath"],                         // html_file
    setFileStepsID,                                             // step_id
    "MT4 Backtest Report",                                      // metric_type
    ea,                                                         // EA_name
    CurrentFile.ToString(),                                     // input_set_file
    System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), // output_set_file_path
    settingsDict["DBPath"],                                     // db_path
    "_summary_metrics.csv",                                     // summary_metrics_path (parameterize if needed)
    settingsDict["ConfigPath"],                                 // config
    settingsDict["ConfigPath"]                                  // perf_criteria
}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_145">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_18">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_146">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_17">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_147">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_297">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_61">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_148">aiSetFilePath</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_298">jsonObj["ai_set_file_path"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_299">aiSetFilePath</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                    <Sequence DisplayName="Create Backtest Completed and Start Optimization Steps" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_92">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="434,227" sap2010:WorkflowViewState.IdRef="LoadScript_19">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_149">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_300">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="Assign_62">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_150">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_301" xml:space="preserve">new object[] {
    setFileID,                                  // job_id
    1,                                          // step_number
    "Backtest Completed and Start Optimization", // step_name
    aiSetFilePath,                     // file_path
    "New Optimization set file " + aiSetFilePath + " at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                     // version
    "",                                         // meta_json (e.g., "{}" or your JSON string)
    "Completed"                                 // status
}</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="SerializeJson_13">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_302">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_151">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="InvokeMethod_21" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_303">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_304" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_152">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="GetObject`1_19">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_305">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_153">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_306">jsonString</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_18">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_154">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_307">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="434,106" sap2010:WorkflowViewState.IdRef="Assign_63">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_155">setFileStepsID</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_308">jsonObj["lastrowid"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="create Optimzation set_file_artifacts" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_128">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="434,228.5" sap2010:WorkflowViewState.IdRef="LoadScript_20">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_156">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_309">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_64">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_157">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_310">new object[] { setFileStepsID, "Optimzation set_file", aiSetFilePath, "" }</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="SerializeJson_14">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_311">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_158">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="InvokeMethod_22" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_312">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_313" xml:space="preserve">/*new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}*/
new string[] {
    settingsDict["DBPath"],
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_159">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="GetObject`1_20">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_314">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_160">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,176" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_315">jsonString</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="434,123.5" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_19">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_161">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_316">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="434,106.5" sap2010:WorkflowViewState.IdRef="Assign_65">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_162">setFileArtifactsID</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_317">jsonObj["lastrowid"].ToString()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </Sequence>
                    <Sequence DisplayName="Assign Optimzation Variable" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_94">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,115.5" sap2010:WorkflowViewState.IdRef="Assign_66">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_163">settingsDict["SettingsFilePath"]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_318">aiSetFilePath</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="434,106.5" sap2010:WorkflowViewState.IdRef="Assign_67">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_164">settingsDict["OptimizationPath"]</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_319">Path.Combine(settingsDict["OptimizationPath"], Path.GetFileNameWithoutExtension(aiSetFilePath) + "-OptimizationReport.htm")</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MT4backtest - Invoke Workflow File (MT4backtest.xaml)" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="MT4backtest.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="dtSymbol">
                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_320">dtSymbol</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="CloseMT4">
                          <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_321">NAppCloseMode.Never</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="InitialDeposit">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_322">settingsDict["InitialDeposit"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="OptimizedParameter">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_323">settingsDict["OptimizedParameter"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="OptimizationReportPath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_324">settingsDict["OptimizationPath"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="BacktestReportPath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_325">settingsDict["BacktestReportPath"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SettingsFilePath">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_326">settingsDict["SettingsFilePath"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="DateTo">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_327">settingsDict["DateTo"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="DateFrom">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_328">settingsDict["DateFrom"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Spread">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_329">settingsDict["Spread"]</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Period">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_330">timeframe</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="btSymbol">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_331">symbol</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="mode">Optimzation</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="TargetEA">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_332">EAFile</CSharpValue>
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <Sequence DisplayName="Extract MT4 Optimization Report to DB" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_106">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Int32" Default="0" Name="currentIndex" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="504.8888888888889,228" sap2010:WorkflowViewState.IdRef="LoadScript_21">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_165">pyObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_333">settingsDict["PythonScriptPath4"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="504.8888888888889,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_23" Name="process_optimization_report_topn">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_334">pyObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_335" xml:space="preserve">/*new List&lt;object&gt;
{
    settingsDict["OptimizationPath"], // html_report_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", // db_path
    setFileStepsID, // step_id
    "C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx" // config_xlsx_path
};*/
new List&lt;object&gt;
{
    settingsDict["OptimizationPath"],          // html_report_path
    settingsDict["DBPath"],                    // db_path
    setFileStepsID,                            // step_id
    settingsDict["ConfigPath"]                 // config_xlsx_path
};</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_166">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="504.8888888888889,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_21">
                        <p:GetObject.PythonObject>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_336">pyResult</CSharpValue>
                          </InArgument>
                        </p:GetObject.PythonObject>
                        <p:GetObject.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_167">jsonString</CSharpReference>
                          </OutArgument>
                        </p:GetObject.Result>
                      </p:GetObject>
                      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_20">
                        <ui:DeserializeJson.JsonObject>
                          <OutArgument x:TypeArguments="njl:JObject">
                            <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_168">jsonObj</CSharpReference>
                          </OutArgument>
                        </ui:DeserializeJson.JsonObject>
                        <ui:DeserializeJson.JsonString>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_337">jsonString</CSharpValue>
                          </InArgument>
                        </ui:DeserializeJson.JsonString>
                      </ui:DeserializeJson>
                      <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_68">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_169">totalPasses</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_338">jsonObj["top_n_passes"].Count()</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="njl:JToken" CurrentIndex="{x:Null}" DisplayName="For Each passObj" sap:VirtualizedContainerService.HintSize="504.8888888888889,1019.1111111111111" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="njl:JToken">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="njl:JToken" Name="passObj" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="503.1111111111111,920" sap2010:WorkflowViewState.IdRef="Sequence_105">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:List(x:Int32)" Name="passNumbersList">
                                  <Variable.Default>
                                    <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">new List&lt;Int32&gt;()</CSharpValue>
                                  </Variable.Default>
                                </Variable>
                                <Variable x:TypeArguments="x:Int32" Name="pass_number" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap:VirtualizedContainerService.HintSize="469.3333333333333,470.6666666666667" sap2010:WorkflowViewState.IdRef="If_7">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">currentIndex == totalPasses - 1</CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_69">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="uix:NAppCloseMode">
                                          <CSharpReference x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpReference`1_170">closeMode</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="uix:NAppCloseMode">
                                          <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_342">NAppCloseMode.Always</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_70">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="uix:NAppCloseMode">
                                          <CSharpReference x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpReference`1_171">closeMode</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="uix:NAppCloseMode">
                                          <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_343">NAppCloseMode.Never</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <Sequence DisplayName="Prepare Pass Number and Opt ID Sequence" sap:VirtualizedContainerService.HintSize="469.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_71">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_172">pass_number</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_344">passObj["pass_number"].ToObject&lt;Int32&gt;()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_72">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_173">optimization_pass_id</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_345">passObj["optimization_pass_id"].ToObject&lt;Int32&gt;()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,167.55555555555554" sap2010:WorkflowViewState.IdRef="InvokeMethod_24" MethodName="Add">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="scg:List(x:Int32)">
                                      <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_347">passNumbersList</CSharpValue>
                                    </InArgument>
                                  </InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_346">pass_number</CSharpValue>
                                  </InArgument>
                                </InvokeMethod>
                                <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="433.77777777777777,167.55555555555554" sap2010:WorkflowViewState.IdRef="InvokeMethod_25" MethodName="Add">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="scg:List(x:Int32)">
                                      <CSharpValue x:TypeArguments="scg:List(x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_349">passIdList</CSharpValue>
                                    </InArgument>
                                  </InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_348">optimization_pass_id</CSharpValue>
                                  </InArgument>
                                </InvokeMethod>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_350">"Pass Number: " + pass_number.ToString() + ", Optimization Pass ID: " + optimization_pass_id.ToString()</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                              </Sequence>
                              <Sequence DisplayName="Assign Best Pass Variable" sap:VirtualizedContainerService.HintSize="469.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_73">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_174">bestPassSetFilePath</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_351">Path.Combine(Path.GetDirectoryName(aiSetFilePath), Path.GetFileNameWithoutExtension(aiSetFilePath)+ $"-{pass_number}.set")</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_74">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_175">bestPassBacktestReportPath</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_352">Path.Combine(Path.GetDirectoryName(aiSetFilePath), Path.GetFileNameWithoutExtension(aiSetFilePath)+ $"-{pass_number}-backtest_report.htm")</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SelectBestPass - Invoke Workflow File (SelectBestPass.xaml)" sap:VirtualizedContainerService.HintSize="469.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="SelectBestPass.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="currentPassIndex">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_353">currentIndex</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="uix:NAppCloseMode" x:Key="closeMT4">
                                    <CSharpValue x:TypeArguments="uix:NAppCloseMode" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354">closeMode</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="bestPassBacktestReportPath">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_355">bestPassBacktestReportPath</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="bestPassPath">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_356">bestPassSetFilePath</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="bestPass">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_357">pass_number.ToString()</CSharpValue>
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <Sequence DisplayName="Extract Best Pass Backtest Report to DB" sap:VirtualizedContainerService.HintSize="469.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_100">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="449.77777777777777,228" sap2010:WorkflowViewState.IdRef="LoadScript_22">
                                  <p:LoadScript.Result>
                                    <OutArgument x:TypeArguments="p:PythonObject">
                                      <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_176">pyObject</CSharpReference>
                                    </OutArgument>
                                  </p:LoadScript.Result>
                                  <p:LoadScript.ScriptFile>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_358">settingsDict["PythonScriptPath3"]</CSharpValue>
                                    </InArgument>
                                  </p:LoadScript.ScriptFile>
                                </p:LoadScript>
                                <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="449.77777777777777,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="434,117" sap2010:WorkflowViewState.IdRef="Assign_75">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Object[]">
                                        <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_177">logList</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Object[]">
                                        <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_359" xml:space="preserve">new List&lt;object&gt; {
    bestPassBacktestReportPath,                                        // html_file
    setFileStepsID,                                                           // step_id
    "Best Pass Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    bestPassSetFilePath,                                                   // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
"", // config
"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx"  // perf_criteria
}.ToArray()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,167" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_360">"Extract Best Pass Backtest Report to DB - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                </Sequence>
                                <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="449.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_26" Name="process_mt4_report">
                                  <p:InvokeMethod.Instance>
                                    <InArgument x:TypeArguments="p:PythonObject">
                                      <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_361">pyObject</CSharpValue>
                                    </InArgument>
                                  </p:InvokeMethod.Instance>
                                  <p:InvokeMethod.Parameters>
                                    <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                      <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_362" xml:space="preserve">//new List&lt;object&gt; { settingsDict["BacktestReportPath"], setFileStepsID,  "MT4 Backtest Report", ea,  CurrentFile.ToString(), System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]), "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db", "_summary_metrics.csv" }
/*new List&lt;object&gt; {
    bestPassBacktestReportPath,                                        // html_file
    setFileStepsID,                                                           // step_id
    "Best Pass Backtest Report",                                                    // metric_type
    ea,                                                                       // EA_name
    bestPassSetFilePath,                                                   // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),      // output_set_file_path
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",  // db_path
    "_summary_metrics.csv",                                                   // summary_metrics_path
	"", // config
	"C:\\Users\\Philip\\Documents\\UiPath\\MT4 Backtesting Automation\\Data\\Config.xlsx",  // perf_criteria
	optimization_pass_id //optimization_pass_id
}*/
new List&lt;object&gt; {
    bestPassBacktestReportPath,                              // html_file
    setFileStepsID,                                          // step_id
    "Best Pass Backtest Report",                             // metric_type
    ea,                                                      // EA_name
    bestPassSetFilePath,                                     // input_set_file
    System.IO.Path.GetDirectoryName(bestPassSetFilePath),    // output_set_file_path
    settingsDict["DBPath"],                                  // db_path
    "_summary_metrics.csv",                                  // summary_metrics_path (keep as is, unless you want to parameterize)
    "",                                                      // config (parameterize if needed; otherwise leave blank)
    settingsDict["ConfigPath"],                              // perf_criteria
    optimization_pass_id                                     // optimization_pass_id
}</CSharpValue>
                                    </InArgument>
                                  </p:InvokeMethod.Parameters>
                                  <p:InvokeMethod.Result>
                                    <OutArgument x:TypeArguments="p:PythonObject">
                                      <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_178">pyResult</CSharpReference>
                                    </OutArgument>
                                  </p:InvokeMethod.Result>
                                </p:InvokeMethod>
                                <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="449.77777777777777,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_22">
                                  <p:GetObject.PythonObject>
                                    <InArgument x:TypeArguments="p:PythonObject">
                                      <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_363">pyResult</CSharpValue>
                                    </InArgument>
                                  </p:GetObject.PythonObject>
                                  <p:GetObject.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_179">jsonString</CSharpReference>
                                    </OutArgument>
                                  </p:GetObject.Result>
                                </p:GetObject>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="449.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_364">jsonString</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                              </Sequence>
                              <Sequence DisplayName="Create Best Pass Backtest Complete Steps" sap:VirtualizedContainerService.HintSize="469.3333333333333,56.888888888888886" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="467.55555555555554,228" sap2010:WorkflowViewState.IdRef="LoadScript_23">
                                  <p:LoadScript.Result>
                                    <OutArgument x:TypeArguments="p:PythonObject">
                                      <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_180">pyScriptObject</CSharpReference>
                                    </OutArgument>
                                  </p:LoadScript.Result>
                                  <p:LoadScript.ScriptFile>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_428">settingsDict["PythonScriptPath2"]</CSharpValue>
                                    </InArgument>
                                  </p:LoadScript.ScriptFile>
                                </p:LoadScript>
                                <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_76">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Object[]">
                                      <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_181">paramsList</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Object[]">
                                      <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_366" xml:space="preserve">new object[] {
    setFileID,                                  // job_id
    2,                                          // step_number
    "Best Pass Backtest Completed", // step_name
    bestPassSetFilePath,                     // file_path
    "Best Pass set file " + bestPassSetFilePath + " at: " + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"), // description
    "V1.0",                                     // version
    "",                                         // meta_json (e.g., "{}" or your JSON string)
    "Completed"                                 // status
}</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_15">
                                  <uwaj:SerializeJson.InputObject>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_367">paramsList</CSharpValue>
                                    </InArgument>
                                  </uwaj:SerializeJson.InputObject>
                                  <uwaj:SerializeJson.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_182">paramsJson</CSharpReference>
                                    </OutArgument>
                                  </uwaj:SerializeJson.Result>
                                </uwaj:SerializeJson>
                                <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="467.55555555555554,373.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_77">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Object[]">
                                        <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_183">logList</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Object[]">
                                        <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_368">paramsList.ToArray()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_369">"Create Best Pass Backtest Complete Steps - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                </Sequence>
                                <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_27" Name="run_sqlite_query">
                                  <p:InvokeMethod.Instance>
                                    <InArgument x:TypeArguments="p:PythonObject">
                                      <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_370">pyScriptObject</CSharpValue>
                                    </InArgument>
                                  </p:InvokeMethod.Instance>
                                  <p:InvokeMethod.Parameters>
                                    <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                      <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_371" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_steps (job_id, step_number, step_name, file_path, description, version, meta_json, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
    paramsJson
}</CSharpValue>
                                    </InArgument>
                                  </p:InvokeMethod.Parameters>
                                  <p:InvokeMethod.Result>
                                    <OutArgument x:TypeArguments="p:PythonObject">
                                      <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_184">pyResult</CSharpReference>
                                    </OutArgument>
                                  </p:InvokeMethod.Result>
                                </p:InvokeMethod>
                                <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_23">
                                  <p:GetObject.PythonObject>
                                    <InArgument x:TypeArguments="p:PythonObject">
                                      <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_372">pyResult</CSharpValue>
                                    </InArgument>
                                  </p:GetObject.PythonObject>
                                  <p:GetObject.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_185">jsonString</CSharpReference>
                                    </OutArgument>
                                  </p:GetObject.Result>
                                </p:GetObject>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="467.55555555555554,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_373">jsonString</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_21">
                                  <ui:DeserializeJson.JsonObject>
                                    <OutArgument x:TypeArguments="njl:JObject">
                                      <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_186">jsonObj</CSharpReference>
                                    </OutArgument>
                                  </ui:DeserializeJson.JsonObject>
                                  <ui:DeserializeJson.JsonString>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_374">jsonString</CSharpValue>
                                    </InArgument>
                                  </ui:DeserializeJson.JsonString>
                                </ui:DeserializeJson>
                                <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,48" sap2010:WorkflowViewState.IdRef="Assign_78">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_187">setFileStepsID</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_375">jsonObj["lastrowid"].ToString()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                              </Sequence>
                              <Sequence DisplayName="create Optimzation set_file_artifacts" sap:VirtualizedContainerService.HintSize="501.33333333333326,1549.7777777777778" sap2010:WorkflowViewState.IdRef="Sequence_104">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="setFileArtifactsID" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="467.55555555555554,228" sap2010:WorkflowViewState.IdRef="LoadScript_24">
                                  <p:LoadScript.Result>
                                    <OutArgument x:TypeArguments="p:PythonObject">
                                      <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_188">pyScriptObject</CSharpReference>
                                    </OutArgument>
                                  </p:LoadScript.Result>
                                  <p:LoadScript.ScriptFile>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_429">settingsDict["PythonScriptPath2"]</CSharpValue>
                                    </InArgument>
                                  </p:LoadScript.ScriptFile>
                                </p:LoadScript>
                                <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_79">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Object[]">
                                      <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_189">paramsList</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Object[]">
                                      <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_377">new object[] { setFileStepsID, "Best Pass set_file", bestPassSetFilePath, "" }</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_16">
                                  <uwaj:SerializeJson.InputObject>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_378">paramsList</CSharpValue>
                                    </InArgument>
                                  </uwaj:SerializeJson.InputObject>
                                  <uwaj:SerializeJson.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_190">paramsJson</CSharpReference>
                                    </OutArgument>
                                  </uwaj:SerializeJson.Result>
                                </uwaj:SerializeJson>
                                <Sequence DisplayName="LogSequence" sap:VirtualizedContainerService.HintSize="467.55555555555554,373.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_103">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_80">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Object[]">
                                        <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_191">logList</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Object[]">
                                        <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_379">paramsList.ToArray()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.77777777777777,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_380">"create Optimzation set_file_artifacts - " + Newtonsoft.Json.JsonConvert.SerializeObject(logList);</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                </Sequence>
                                <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_28" Name="run_sqlite_query">
                                  <p:InvokeMethod.Instance>
                                    <InArgument x:TypeArguments="p:PythonObject">
                                      <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_381">pyScriptObject</CSharpValue>
                                    </InArgument>
                                  </p:InvokeMethod.Instance>
                                  <p:InvokeMethod.Parameters>
                                    <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                      <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_382" xml:space="preserve">new string[] {
    "C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\EA_Automation.db",
    "INSERT INTO set_file_artifacts (step_id, artifact_type, file_path, meta_json) VALUES (?, ?, ?, ?)",
    paramsJson // this should be a JSON array or object with 4 values: step_id, artifact_type, file_path, meta_json
}</CSharpValue>
                                    </InArgument>
                                  </p:InvokeMethod.Parameters>
                                  <p:InvokeMethod.Result>
                                    <OutArgument x:TypeArguments="p:PythonObject">
                                      <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_192">pyResult</CSharpReference>
                                    </OutArgument>
                                  </p:InvokeMethod.Result>
                                </p:InvokeMethod>
                                <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="GetObject`1_24">
                                  <p:GetObject.PythonObject>
                                    <InArgument x:TypeArguments="p:PythonObject">
                                      <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_383">pyResult</CSharpValue>
                                    </InArgument>
                                  </p:GetObject.PythonObject>
                                  <p:GetObject.Result>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_193">jsonString</CSharpReference>
                                    </OutArgument>
                                  </p:GetObject.Result>
                                </p:GetObject>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="467.55555555555554,175.55555555555554" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_384">jsonString</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                </ui:LogMessage>
                                <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="467.55555555555554,123.11111111111111" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_22">
                                  <ui:DeserializeJson.JsonObject>
                                    <OutArgument x:TypeArguments="njl:JObject">
                                      <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_194">jsonObj</CSharpReference>
                                    </OutArgument>
                                  </ui:DeserializeJson.JsonObject>
                                  <ui:DeserializeJson.JsonString>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_385">jsonString</CSharpValue>
                                    </InArgument>
                                  </ui:DeserializeJson.JsonString>
                                </ui:DeserializeJson>
                                <Assign sap:VirtualizedContainerService.HintSize="467.55555555555554,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_81">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_195">setFileArtifactsID</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_386">jsonObj["lastrowid"].ToString()</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                              <Assign sap:VirtualizedContainerService.HintSize="469.3333333333333,48" sap2010:WorkflowViewState.IdRef="Assign_82">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">
                                    <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_196">currentIndex</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_387">currentIndex + 1</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <ui:ForEach.Values>
                          <InArgument x:TypeArguments="sc:IEnumerable">
                            <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">jsonObj["top_n_passes"]</CSharpValue>
                          </InArgument>
                        </ui:ForEach.Values>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                    </Sequence>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,176" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_434">settingsDict["BacktestReportPath"]</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,176" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_433">System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"])</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                    <Assign sap:VirtualizedContainerService.HintSize="450,115.5" sap2010:WorkflowViewState.IdRef="Assign_94">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">
                          <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_218">backtestFiles</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">
                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_431">System.IO.Directory.GetFiles(System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"]))</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="450,115.5" sap2010:WorkflowViewState.IdRef="Assign_95">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">
                          <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_219">optimizationFiles</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">
                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_432">System.IO.Directory.GetFiles(System.IO.Path.GetDirectoryName(settingsDict["OptimizationPath"]))</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="450,115.5" sap2010:WorkflowViewState.IdRef="Assign_96">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">
                          <CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_220">allArtifacts</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">
                          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_414">backtestFiles.Concat(optimizationFiles).ToArray()</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="450,115.5" sap2010:WorkflowViewState.IdRef="Assign_97">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_221">out_Artifacts</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_416">Newtonsoft.Json.JsonConvert.SerializeObject(allArtifacts)</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="450,115.5" sap2010:WorkflowViewState.IdRef="Assign_101">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_224">out_worker_JobId</CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_430">setFileID</CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEachFileX DisplayName="For Each File in Folder" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentBacktestFile" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,247" sap2010:WorkflowViewState.IdRef="Sequence_123">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="416,187" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True">
                              <ui:MoveFile.Destination>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_420">settingsDict["BacktestReportBackupPath"]</CSharpValue>
                                </InArgument>
                              </ui:MoveFile.Destination>
                              <ui:MoveFile.Path>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_419">CurrentBacktestFile.FullName</CSharpValue>
                                </InArgument>
                              </ui:MoveFile.Path>
                            </ui:MoveFile>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                      <ui:ForEachFileX.Folder>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_435">System.IO.Path.GetDirectoryName(settingsDict["BacktestReportPath"])</CSharpValue>
                        </InArgument>
                      </ui:ForEachFileX.Folder>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachFileX>
                    <ui:ForEachFileX DisplayName="For Each File in Folder" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="ForEachFileX_3" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentOptFile" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,247" sap2010:WorkflowViewState.IdRef="Sequence_124">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="416,187" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="True">
                              <ui:MoveFile.Destination>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_423">settingsDict["OptimizationBackupPath"]</CSharpValue>
                                </InArgument>
                              </ui:MoveFile.Destination>
                              <ui:MoveFile.Path>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_422">CurrentOptFile.FullName</CSharpValue>
                                </InArgument>
                              </ui:MoveFile.Path>
                            </ui:MoveFile>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                      <ui:ForEachFileX.Folder>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_436">System.IO.Path.GetDirectoryName(settingsDict["OptimizationPath"])</CSharpValue>
                        </InArgument>
                      </ui:ForEachFileX.Folder>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachFileX>
                    <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True">
                      <ui:MoveFile.Destination>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_389" xml:space="preserve">/*Path.Combine("C:\\Users\\Philip\\Documents\\GitHub\\EA_Automation\\01_user_inputs\\Processed", Path.GetFileName(CurrentFile.ToString()))*/
Path.Combine(settingsDict["ProcessedFolder"], Path.GetFileName(CurrentFile.ToString()))</CSharpValue>
                        </InArgument>
                      </ui:MoveFile.Destination>
                      <ui:MoveFile.Path>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_388">CurrentFile.ToString()</CSharpValue>
                        </InArgument>
                      </ui:MoveFile.Path>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MoveFile>
                    <Sequence DisplayName="Update set_file_steps Status" sap:VirtualizedContainerService.HintSize="450,57" sap2010:WorkflowViewState.IdRef="Sequence_112">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="503,227" sap2010:WorkflowViewState.IdRef="LoadScript_25">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_197">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_390">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="503.1111111111111,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_83">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_198">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_391" xml:space="preserve">new object[] { 
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),       // Updated at
	setFileID
}</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_17">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_392">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_199">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_29" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_393">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_394" xml:space="preserve">new string[] {settingsDict["DBPath"],
	"UPDATE set_file_steps SET status = 'Completed', updated_at = ? WHERE job_id = ?;", 
	paramsJson}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_200">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_28">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_107">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="GetObject`1_25">
                              <p:GetObject.PythonObject>
                                <InArgument x:TypeArguments="p:PythonObject">
                                  <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_395">pyResult</CSharpValue>
                                </InArgument>
                              </p:GetObject.PythonObject>
                              <p:GetObject.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_201">jsonString</CSharpReference>
                                </OutArgument>
                              </p:GetObject.Result>
                            </p:GetObject>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,337.3333333333333" sap2010:WorkflowViewState.IdRef="CommentOut_29">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,226.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_108">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_396">jsonString</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                            </ui:LogMessage>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_30">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_109">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_23">
                              <ui:DeserializeJson.JsonObject>
                                <OutArgument x:TypeArguments="njl:JObject">
                                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_202">jsonObj</CSharpReference>
                                </OutArgument>
                              </ui:DeserializeJson.JsonObject>
                              <ui:DeserializeJson.JsonString>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_397">jsonString</CSharpValue>
                                </InArgument>
                              </ui:DeserializeJson.JsonString>
                            </ui:DeserializeJson>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,276.44444444444446" sap2010:WorkflowViewState.IdRef="CommentOut_31">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_110">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_84">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_203">setFileID</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_398">jsonObj["lastrowid"].ToString()</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,48" sap2010:WorkflowViewState.IdRef="CommentOut_32">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_111">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_10">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_399">setFileID</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                            </ui:MessageBox>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                    <Sequence DisplayName="Update set_file_jobs Status" sap:VirtualizedContainerService.HintSize="450,48" sap2010:WorkflowViewState.IdRef="Sequence_118">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:LoadScript Code="{x:Null}" DisplayName="Load Python Script" sap:VirtualizedContainerService.HintSize="503.1111111111111,228" sap2010:WorkflowViewState.IdRef="LoadScript_26">
                        <p:LoadScript.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_204">pyScriptObject</CSharpReference>
                          </OutArgument>
                        </p:LoadScript.Result>
                        <p:LoadScript.ScriptFile>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_400">settingsDict["PythonScriptPath2"]</CSharpValue>
                          </InArgument>
                        </p:LoadScript.ScriptFile>
                      </p:LoadScript>
                      <Assign sap:VirtualizedContainerService.HintSize="503.1111111111111,116.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_85">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:Object[]">
                            <CSharpReference x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_205">paramsList</CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:Object[]">
                            <CSharpValue x:TypeArguments="s:Object[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_401" xml:space="preserve">new object[] { 
    DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),       // Updated at
	setFileID
}</CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <uwaj:SerializeJson Settings="{x:Null}" DisplayName="Serialize JSON" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="SerializeJson_18">
                        <uwaj:SerializeJson.InputObject>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_402">paramsList</CSharpValue>
                          </InArgument>
                        </uwaj:SerializeJson.InputObject>
                        <uwaj:SerializeJson.Result>
                          <OutArgument x:TypeArguments="x:String">
                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_206">paramsJson</CSharpReference>
                          </OutArgument>
                        </uwaj:SerializeJson.Result>
                      </uwaj:SerializeJson>
                      <p:InvokeMethod DisplayName="Invoke Python Method" sap:VirtualizedContainerService.HintSize="503.1111111111111,123.11111111111111" sap2010:WorkflowViewState.IdRef="InvokeMethod_30" Name="run_sqlite_query">
                        <p:InvokeMethod.Instance>
                          <InArgument x:TypeArguments="p:PythonObject">
                            <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_403">pyScriptObject</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Instance>
                        <p:InvokeMethod.Parameters>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_404" xml:space="preserve">new string[] {settingsDict["DBPath"],
	"UPDATE set_file_jobs SET status = 'Completed', updated_at = ? WHERE id = ?;",
	paramsJson}</CSharpValue>
                          </InArgument>
                        </p:InvokeMethod.Parameters>
                        <p:InvokeMethod.Result>
                          <OutArgument x:TypeArguments="p:PythonObject">
                            <CSharpReference x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_207">pyResult</CSharpReference>
                          </OutArgument>
                        </p:InvokeMethod.Result>
                      </p:InvokeMethod>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_33">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_113">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:GetObject x:TypeArguments="x:String" DisplayName="Get Python Object" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="GetObject`1_26">
                              <p:GetObject.PythonObject>
                                <InArgument x:TypeArguments="p:PythonObject">
                                  <CSharpValue x:TypeArguments="p:PythonObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_405">pyResult</CSharpValue>
                                </InArgument>
                              </p:GetObject.PythonObject>
                              <p:GetObject.Result>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_208">jsonString</CSharpReference>
                                </OutArgument>
                              </p:GetObject.Result>
                            </p:GetObject>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,337.3333333333333" sap2010:WorkflowViewState.IdRef="CommentOut_34">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,226.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_114">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="416,166.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_406">jsonString</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                            </ui:LogMessage>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,284.8888888888889" sap2010:WorkflowViewState.IdRef="CommentOut_35">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,174.22222222222223" sap2010:WorkflowViewState.IdRef="Sequence_115">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="416,114.22222222222223" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_24">
                              <ui:DeserializeJson.JsonObject>
                                <OutArgument x:TypeArguments="njl:JObject">
                                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_209">jsonObj</CSharpReference>
                                </OutArgument>
                              </ui:DeserializeJson.JsonObject>
                              <ui:DeserializeJson.JsonString>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_407">jsonString</CSharpValue>
                                </InArgument>
                              </ui:DeserializeJson.JsonString>
                            </ui:DeserializeJson>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,276.44444444444446" sap2010:WorkflowViewState.IdRef="CommentOut_36">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="467.55555555555554,165.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_116">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.77777777777777,105.77777777777777" sap2010:WorkflowViewState.IdRef="Assign_86">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_210">setFileID</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_408">jsonObj["lastrowid"].ToString()</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="503.1111111111111,48" sap2010:WorkflowViewState.IdRef="CommentOut_37">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.77777777777777,169.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_117">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="416,109.77777777777777" sap2010:WorkflowViewState.IdRef="MessageBox_11">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_409">setFileID</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                            </ui:MessageBox>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </p:PythonScope.Body>
              <p:PythonScope.LibraryPath>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_233">settingsDict["PythonDllPath"]</CSharpValue>
                </InArgument>
              </p:PythonScope.LibraryPath>
              <p:PythonScope.Path>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_232">settingsDict["PythonHome"]</CSharpValue>
                </InArgument>
              </p:PythonScope.Path>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:PythonScope.WorkingFolder>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_234">settingsDict["PythonWorkingFolder"]</CSharpValue>
                </InArgument>
              </p:PythonScope.WorkingFolder>
            </p:PythonScope>
            <Assign sap:VirtualizedContainerService.HintSize="486,106.5" sap2010:WorkflowViewState.IdRef="Assign_93">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_217">out_Status</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Completed</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="520,397.5" sap2010:WorkflowViewState.IdRef="Sequence_120">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="486,115.5" sap2010:WorkflowViewState.IdRef="Assign_88">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_212">out_Status</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Failed</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="486,115.5" sap2010:WorkflowViewState.IdRef="Assign_89">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_213">out_ErrorMessage</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_411">exception.Message</CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="486,106.5" sap2010:WorkflowViewState.IdRef="Assign_90">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_215">out_Artifacts</CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
        <TryCatch.Finally>
          <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="520,25" sap2010:WorkflowViewState.IdRef="Sequence_121">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </TryCatch.Finally>
      </TryCatch>
    </Sequence>
  </Sequence>
</Activity>